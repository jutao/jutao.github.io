{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":0,"renderable":0},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","path":"lib/canvas-ribbon/canvas-ribbon.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/three-waves.min.js","path":"lib/three/three-waves.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/three.min.js","path":"lib/three/three.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":0,"renderable":1}],"Cache":[{"_id":"source/404.html","hash":"7317ce822ebdd3ac6f01fad298c1541df09cc582","modified":1492224953040},{"_id":"source/CNAME","hash":"c469aa059833a7eb0bb338ee71e1bcb60d942ac2","modified":1492224953040},{"_id":"themes/next/.bowerrc","hash":"334da94ca6f024d60d012cc26ea655681e724ad8","modified":1492224953040},{"_id":"themes/next/.gitattributes","hash":"8454b9313cb1a97b63fb87e2d29daee497ce6249","modified":1492224953040},{"_id":"themes/next/.gitignore","hash":"de5b9b9e5b313b4a86e805b02f334d35c87bfe56","modified":1492224953040},{"_id":"themes/next/.editorconfig","hash":"211d2c92bfdddb3e81ea946f4ca7a539f150f4da","modified":1492224953040},{"_id":"themes/next/.hound.yml","hash":"289dcf5bfe92dbd680d54d6e0668f41c9c9c0c78","modified":1492224953040},{"_id":"themes/next/.jshintrc","hash":"b7d23f2ce8d99fa073f22f9960605f318acd7710","modified":1492224953040},{"_id":"themes/next/.javascript_ignore","hash":"74b54cf920cbbf4038a68e54b7138af8b8f45588","modified":1492224953040},{"_id":"themes/next/.travis.yml","hash":"360f38044910e74bf628b0799e19db90718b2cbe","modified":1492224953040},{"_id":"themes/next/LICENSE","hash":"ec44503d7e617144909e54533754f0147845f0c5","modified":1492224953040},{"_id":"themes/next/.stylintrc","hash":"3b7f9785e9ad0dab764e1c535b40df02f4ff5fd6","modified":1492224953040},{"_id":"themes/next/README.en.md","hash":"953873fe2ee79bfc567b16dcdf8f91c1410444f8","modified":1492224953040},{"_id":"themes/next/_config.yml","hash":"e76552ef479be8a326bd96f396bd6006ecad97fd","modified":1492225043116},{"_id":"themes/next/README.md","hash":"06aaf1241e9e1619956c86d8b1397a643840a9d1","modified":1492224953040},{"_id":"themes/next/bower.json","hash":"bd70cf5988bbfc8cbcf13adae659151a55466524","modified":1492224953040},{"_id":"themes/next/gulpfile.coffee","hash":"412defab3d93d404b7c26aaa0279e2e586e97454","modified":1492224953056},{"_id":"themes/next/package.json","hash":"a5c189d4c4e946e936d3b5e29e2d81ddaf03ff96","modified":1492224953087},{"_id":"source/_posts/Path实战之雷达图.md","hash":"d2f8630a62981202f6e0504ab632e91d36d03a3d","modified":1492224953040},{"_id":"source/_posts/[Android] 设计模式-策略模式.md","hash":"908fcb4b09be4ca404531b8805f951dd1de58062","modified":1492224953040},{"_id":"source/categories/index.md","hash":"71ad8a57397585836678668c71f476a546a3a7cc","modified":1492224953040},{"_id":"source/tags/index.md","hash":"d3ece670fb1385945731b9b5b6f24575aa071e11","modified":1492224953040},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"5adfad3ef1b870063e621bc0838268eb2c7c697a","modified":1492224953040},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"4de856de657a27f340f245eb491a1f52ceba1735","modified":1492224953040},{"_id":"themes/next/languages/de.yml","hash":"4be3e7d296d5592e0d111dfa6cbbff02602c972d","modified":1492224953056},{"_id":"themes/next/languages/fr-FR.yml","hash":"0d5bd8bbbeafb72506124ed35e7509debc753612","modified":1492224953056},{"_id":"themes/next/languages/en.yml","hash":"b3ee45143bc014578db6b8ac0573f7c7b143a743","modified":1492224953056},{"_id":"themes/next/languages/default.yml","hash":"d912814caac150da1611c96843371a87714e52f9","modified":1492224953056},{"_id":"themes/next/languages/id.yml","hash":"c0848e93bf33a1333ff232905b6b392b1e056dd1","modified":1492224953056},{"_id":"themes/next/languages/ja.yml","hash":"1a608dc799c0f9c36b626bac6fe3404acb45b86d","modified":1492224953056},{"_id":"themes/next/languages/ko.yml","hash":"5c811514aef401317a9ec38b95679d6d2ef0ad42","modified":1492224953056},{"_id":"themes/next/languages/pt-BR.yml","hash":"cc8b5a67ec87b0d5aec6e253bab67ec3cfe3069c","modified":1492224953056},{"_id":"themes/next/languages/pt.yml","hash":"943475a7d681f37ede579cd62da9c50568ca0f8d","modified":1492224953056},{"_id":"themes/next/languages/zh-Hans.yml","hash":"3111ce4cc5f30868b3628f9f805d2aef3b75d1c1","modified":1492224953056},{"_id":"themes/next/languages/ru.yml","hash":"84d41a111e497236b2c1fa16e9b91668a1f37037","modified":1492224953056},{"_id":"themes/next/languages/zh-tw.yml","hash":"8ce0a32411de111ae39d08e4bc936767dacdeb08","modified":1492224953056},{"_id":"themes/next/languages/zh-hk.yml","hash":"b58c0d85daa4d62b0c9753a59de0739aa0120735","modified":1492224953056},{"_id":"themes/next/layout/_layout.swig","hash":"efa71671290bb4b497d83720282b36482b6b0efb","modified":1492224953056},{"_id":"themes/next/layout/archive.swig","hash":"b867a08f6b43de8b5d700c84b943df55917407ae","modified":1492224953087},{"_id":"themes/next/layout/category.swig","hash":"58cf08388901f7549b1fca95548b2c79173aa840","modified":1492224953087},{"_id":"themes/next/layout/index.swig","hash":"e5b52e04296203262a400e8e36ae12426d31fd5b","modified":1492224953087},{"_id":"themes/next/layout/page.swig","hash":"2a13804aa186f6062738d136e430870c53789bf4","modified":1492224953087},{"_id":"themes/next/layout/post.swig","hash":"b8334c479840b7724638eec71971cbd8512ae58d","modified":1492224953087},{"_id":"themes/next/layout/schedule.swig","hash":"459cd6d9887b7a2ebda9ba3a5585a718904adb02","modified":1492224953087},{"_id":"themes/next/layout/tag.swig","hash":"6f764ea3ab11eeb7c530df45528d449b14f5dc62","modified":1492224953087},{"_id":"themes/next/scripts/merge-configs.js","hash":"3ce1be32bb77ee19da25e8dae7dc04e2afc46ca1","modified":1492224953087},{"_id":"themes/next/scripts/merge.js","hash":"39b84b937b2a9608b94e5872349a47200e1800ff","modified":1492224953087},{"_id":"themes/next/test/helpers.js","hash":"f25e7f3265eb5a6e1ccbb5e5012fa9bebf134105","modified":1492224953212},{"_id":"themes/next/test/.jshintrc","hash":"c9fca43ae0d99718e45a6f5ce736a18ba5fc8fb6","modified":1492224953212},{"_id":"themes/next/test/intern.js","hash":"db90b1063356727d72be0d77054fdc32fa882a66","modified":1492224953212},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1492224953134},{"_id":"themes/next/layout/_custom/header.swig","hash":"ba8ab5a0280b953aa97435ff8946cbcbb2755a27","modified":1492224953056},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"ba8ab5a0280b953aa97435ff8946cbcbb2755a27","modified":1492224953056},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"6d40652784585d263c37b8a3723e43e04b926ca7","modified":1492224953056},{"_id":"themes/next/layout/_macro/post-copyright.swig","hash":"506feb56e9b1091187d2014742f63a17758df933","modified":1492224953056},{"_id":"themes/next/layout/_macro/post.swig","hash":"79851872b6b4fbd24e4a5a946f263da85b0c265d","modified":1492224953056},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"e7f58154ac734088372888742e0029ce7c690511","modified":1492224953056},{"_id":"themes/next/layout/_macro/reward.swig","hash":"b6cb171f0ed227b82b8f7601814af2df93f3a09a","modified":1492224953056},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"c5cc0070ca7c9a8dbd4b09e0398db536c3cdbe8a","modified":1492224953056},{"_id":"themes/next/layout/_partials/comments.swig","hash":"5258c03149aa18e9abfeb8de10e435a406d9c924","modified":1492224953056},{"_id":"themes/next/layout/_partials/footer.swig","hash":"683616f4a80796051e2346d80acf838a589450b0","modified":1492224953056},{"_id":"themes/next/layout/_partials/header.swig","hash":"d6bf1d1554d91eaf1bfc40ba8905ae81673e5f45","modified":1492224953056},{"_id":"themes/next/layout/_partials/head.swig","hash":"376adb0c482242ef8bcad31b93b99cc5c35e92fa","modified":1492224953056},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"77c61e0baea3544df361b7338c3cd13dc84dde22","modified":1492224953056},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"1634fb887842698e01ff6e632597fe03c75d2d01","modified":1492224953056},{"_id":"themes/next/layout/_partials/search.swig","hash":"b4ebe4a52a3b51efe549dd1cdee846103664f5eb","modified":1492224953056},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"c0f5a0955f69ca4ed9ee64a2d5f8aa75064935ad","modified":1492224953071},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"931808ad9b8d8390c0dcf9bdeb0954eeb9185d68","modified":1492224953071},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"1ada0189069e17b0dc567ae4b4ee365b2ec0c7d7","modified":1492224953071},{"_id":"themes/next/layout/_third-party/duoshuo-hot-articles.swig","hash":"ba75672183d94f1de7c8bd0eeee497a58c70e889","modified":1492224953087},{"_id":"themes/next/layout/_third-party/exturl.swig","hash":"8301c9600bb3e47f7fb98b0e0332ef3c51bb1688","modified":1492224953087},{"_id":"themes/next/layout/_third-party/mathjax.swig","hash":"a0bd3388587fd943baae0d84ca779a707fbcad89","modified":1492224953087},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"db15d7e1552aa2d2386a6b8a33b3b3a40bf9e43d","modified":1492224953087},{"_id":"themes/next/layout/_third-party/scroll-cookie.swig","hash":"9a188938d46931d5f3882a140aa1c48b3a893f0c","modified":1492224953087},{"_id":"themes/next/scripts/tags/button.js","hash":"aaf71be6b483fca7a65cd6296c2cf1c2271c26a6","modified":1492224953087},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"99b66949f18398689b904907af23c013be1b978f","modified":1492224953087},{"_id":"themes/next/scripts/tags/exturl.js","hash":"5022c0ba9f1d13192677cf1fd66005c57c3d0f53","modified":1492224953087},{"_id":"themes/next/scripts/tags/full-image.js","hash":"c9f833158c66bd72f627a0559cf96550e867aa72","modified":1492224953087},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"ac681b0d0d8d39ba3817336c0270c6787c2b6b70","modified":1492224953087},{"_id":"themes/next/scripts/tags/note.js","hash":"7dc14db08f2c74f8f1952534b424f220f5c000c6","modified":1492224953087},{"_id":"themes/next/source/css/main.styl","hash":"a91dbb7ef799f0a171b5e726c801139efe545176","modified":1492224953134},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"16505f61f19ba65f629dfd033f14ee9abcf18756","modified":1492224953150},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1492224953150},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1492224953150},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1492224953150},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1492224953150},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1492224953150},{"_id":"themes/next/source/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1492224953150},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1492224953150},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1492224953150},{"_id":"themes/next/source/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1492224953150},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1492224953150},{"_id":"themes/next/source/images/quote-r.svg","hash":"2a2a250b32a87c69dcc1b1976c74b747bedbfb41","modified":1492224953150},{"_id":"themes/next/source/images/quote-l.svg","hash":"cd108d6f44351cadf8e6742565217f88818a0458","modified":1492224953150},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1492224953150},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1492224953071},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1492224953071},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1492224953118},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1492224953134},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1492224953118},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1492224953134},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1492224953134},{"_id":"themes/next/layout/_partials/head/custom-head.swig","hash":"a223919d2e1bf17ca4d6abb2c86f2efca9883dc1","modified":1492224953056},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"f5e487b0d213ca0bd94aa30bc23b240d65081627","modified":1492224953056},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"b6e4754498b5eeb470e11fd596227552d9070605","modified":1492224953056},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"a8c7f9ca7c605d039a1f3bf4e4d3183700a3dd62","modified":1492224953071},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"b25002a83cbd2ca0c4a5df87ad5bff26477c0457","modified":1492224953071},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"9e3d133ac5bcc6cb51702c83b2611a49811abad1","modified":1492224953071},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"d4fbffd7fa8f2090eb32a871872665d90a885fac","modified":1492224953071},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"d9e2d9282f9be6e04eae105964abb81e512bffed","modified":1492224953071},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"12684840de632eb16e53ffa863166306a756fd4f","modified":1492224953071},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a9a3995b9615adfb8d6b127c78c6771627bee19a","modified":1492224953071},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"9b84ab576982b2c3bb0291da49143bc77fba3cc6","modified":1492224953071},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"71397a5823e8ec8aad3b68aace13150623b3e19d","modified":1492224953071},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"753d262911c27baf663fcaf199267133528656af","modified":1492224953071},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"7b11eac3a0685fa1ab2ab6ecff60afc4f15f0d16","modified":1492224953071},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"a10b7f19d7b5725527514622899df413a34a89db","modified":1492224953071},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"b1e13df83fb2b1d5d513b30b7aa6158b0837daab","modified":1492224953071},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"a79e7e0d809fcf407593dd7ed9e023db21c3cbd6","modified":1492224953071},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"441f1a1b4e2f652d3b975995bd9d44ff4866f057","modified":1492224953071},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"8a399df90dadba5ad4e781445b58f4765aeb701e","modified":1492224953071},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"e495aed8fb36bf8015ddbd64366270a7debad2b0","modified":1492224953071},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"e9a0590dafde1046356620dd2b81e83b6b3b0936","modified":1492224953071},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"f9a1647a8f1866deeb94052d1f87a5df99cb1e70","modified":1492224953071},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"4c501ea0b9c494181eb3c607c5526a5754e7fbd8","modified":1492224953071},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"b83a51bbe0f1e2ded9819070840b0ea145f003a6","modified":1492224953071},{"_id":"themes/next/layout/_third-party/comments/duoshuo.swig","hash":"1600f340e0225361580c44890568dc07dbcf2c89","modified":1492224953071},{"_id":"themes/next/layout/_third-party/comments/gentie.swig","hash":"0f38f053841ef77cdce56a84cfbb4dd4c3329486","modified":1492224953071},{"_id":"themes/next/layout/_third-party/comments/hypercomments.swig","hash":"af7f3e43cbdc4f88c13f101f0f341af96ace3383","modified":1492224953071},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"0399bbdc524ba50930cb6f8e2d5628ff682fc612","modified":1492224953071},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"5830a52c2a555d3a1f19b67d7bf3d072376cdea9","modified":1492224953071},{"_id":"themes/next/layout/_third-party/comments/youyan.swig","hash":"de95ec8920d1660680078451008f8bd69f14d082","modified":1492224953071},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"34599633658f3b0ffb487728b7766e1c7b551f5a","modified":1492224953087},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"4a10634dba16ddf2a3cbd4908dfbc97e9aa45469","modified":1492224953087},{"_id":"themes/next/layout/_third-party/search/tinysou.swig","hash":"fe95dd3d166634c466e19aa756e65ad6e8254d3e","modified":1492224953087},{"_id":"themes/next/layout/_third-party/seo/baidu-push.swig","hash":"d8c98938719284fa06492c114d99a1904652a555","modified":1492224953087},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"531934ea21ef4dc9f0978512050f54834f0a6cff","modified":1492224953134},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"a0f23e75a137d8c996c70e2059e0074f1e97a127","modified":1492224953134},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"e55265c8a8a6ae0c3c08e3509de92ee62c3cb5f6","modified":1492224953134},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"3403fdd8efde1a0afd11ae8a5a97673f5903087f","modified":1492224953118},{"_id":"themes/next/source/css/_variables/base.styl","hash":"5b336489316d5efea069fe8bcea4479b53ec7545","modified":1492224953134},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"09534b68bd1a708729b3cfffe17737e3af457757","modified":1492224953134},{"_id":"themes/next/source/js/src/affix.js","hash":"1b509c3b5b290a6f4607f0f06461a0c33acb69b1","modified":1492224953150},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"0ec035e20d1f26bf553a79877180ba312bea885c","modified":1492224953150},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"cb431b54ba9c692165a1f5a12e4c564a560f8058","modified":1492224953150},{"_id":"themes/next/source/js/src/exturl.js","hash":"a2a0f0de07e46211f74942a468f42ee270aa555c","modified":1492224953150},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"b35a7dc47b634197b93487cea8671a40a9fdffce","modified":1492224953150},{"_id":"themes/next/source/js/src/js.cookie.js","hash":"1512c751d219577d338ac0780fb2bbd9075d5298","modified":1492224953150},{"_id":"themes/next/source/js/src/post-details.js","hash":"bfaf52b69aad96566aa21b785973441a2555b4ba","modified":1492224953150},{"_id":"themes/next/source/js/src/motion.js","hash":"ff9ea37d05c269e3a140c4ab448af03efc4bcc76","modified":1492224953150},{"_id":"themes/next/source/js/src/scroll-cookie.js","hash":"02cf91514e41200bc9df5d8bdbeb58575ec06074","modified":1492224953150},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"b7657be25fc52ec67c75ab5481bdcb483573338b","modified":1492224953150},{"_id":"themes/next/source/js/src/utils.js","hash":"4aceddc2ca32097a9832374da232b6f76af4d5f4","modified":1492224953150},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1492224953165},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1492224953150},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","hash":"ef4b2877e37d65025a28eea154b33fe66351493c","modified":1492224953165},{"_id":"themes/next/source/lib/fastclick/.bower.json","hash":"bf3eef9d647cd7c9b62feda3bc708c6cdd7c0877","modified":1492224953165},{"_id":"themes/next/source/lib/fastclick/LICENSE","hash":"6f474ea75c42442da7bbcf2e9143ce98258efd8d","modified":1492224953165},{"_id":"themes/next/source/lib/fastclick/README.md","hash":"68a9b9d53126405b0fa5f3324f1fb96dbcc547aa","modified":1492224953165},{"_id":"themes/next/source/lib/fastclick/bower.json","hash":"a9b3ee1e4db71a0e4ea6d5bed292d176dd68b261","modified":1492224953165},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"03ddbf76c1dd1afb93eed0b670d2eee747472ef1","modified":1492224953181},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"b4aefc910578d76b267e86dfffdd5121c8db9aec","modified":1492224953181},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"c31ff06a740955e44edd4403902e653ccabfd4db","modified":1492224953181},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"71e7183634dc1b9449f590f15ebd7201add22ca7","modified":1492224953181},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"ee33b2798b1e714b904d663436c6b3521011d1fa","modified":1492224953181},{"_id":"themes/next/source/lib/jquery/.bower.json","hash":"865d6c1328ab209a4376b9d2b7a7824369565f28","modified":1492224953196},{"_id":"themes/next/source/lib/jquery_lazyload/.bower.json","hash":"90fa628f156d8045357ff11eaf32e61abacf10e8","modified":1492224953196},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4ded6fee668544778e97e38c2b211fc56c848e77","modified":1492224953196},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","hash":"b930297cb98b8e1dbd5abe9bc1ed9d5935d18ce8","modified":1492224953196},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"f4a570908f6c89c6edfb1c74959e733eaadea4f2","modified":1492224953196},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","hash":"e0acf1db27b0cc16128a59c46db1db406b5c4c58","modified":1492224953196},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"bf773ad48a0b9aa77681a89d7569eefc0f7b7b18","modified":1492224953196},{"_id":"themes/next/source/lib/three/three-waves.min.js","hash":"b070490e0588c4625e84bcd4f847dc6275a97a81","modified":1492224953196},{"_id":"themes/next/source/lib/velocity/.bower.json","hash":"63da5e80ebb61bb66a2794d5936315ca44231f0c","modified":1492224953212},{"_id":"themes/next/source/lib/velocity/bower.json","hash":"92d92860418c4216aa59eb4cb4a556290a7ad9c3","modified":1492224953212},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"bf172816a9c57f9040e3d19c24e181a142daf92b","modified":1492224953212},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"dbbfb50f6502f6b81dcc9fee7b31f1e812da3464","modified":1492224953212},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"dde584994ac13dc601836e86f4cf490e418d9723","modified":1492224953212},{"_id":"themes/next/source/lib/jquery/index.js","hash":"17a740d68a1c330876c198b6a4d9319f379f3af2","modified":1492224953196},{"_id":"themes/next/layout/_third-party/search/algolia-search/assets.swig","hash":"218cc936ba3518a3591b2c9eda46bc701edf7710","modified":1492224953087},{"_id":"themes/next/layout/_third-party/search/algolia-search/dom.swig","hash":"2530de0f3125a912756f6c0e9090cd012134a4c5","modified":1492224953087},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"1dc2ed435e41ca041f43bd9633d5d95139afbb42","modified":1492224953087},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"22828f5141c0cecb9ef25a110e194cdfa3a36423","modified":1492224953103},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"4ba6f2a615693b9b5afc266d9c833697016085fd","modified":1492224953087},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"7ad4081466b397e2a6204141bb7768b7c01bd93c","modified":1492224953103},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"ff4489cd582f518bba6909a301ac1292a38b4e96","modified":1492224953103},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"88559b13ce94311405b170a0506ded91273beceb","modified":1492224953103},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"6eb4bcc3056bd279d000607e8b4dad50d368ca69","modified":1492224953118},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"4998bedff9c84a09a294b8ef36ede2e3644d3528","modified":1492224953118},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"c9218b48c56e52c06af9ce3cc8fbdae737cf16fe","modified":1492224953118},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"1da5c800d025345f212a3bf1be035060f4e5e6ed","modified":1492224953118},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"3f40e8a9fe8e7bd5cfc4cf4cbbbcb9539462e973","modified":1492224953118},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"ea9069645696f86c5df64208490876fe150c8cae","modified":1492224953118},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"12662536c7a07fff548abe94171f34b768dd610f","modified":1492224953118},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"25d5e45a355ee2093f3b8b8eeac125ebf3905026","modified":1492224953134},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"b1025c421406d2c24cc92a02ae28c1915b01e240","modified":1492224953134},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"d0bfd1bef988c76f7d7dd72d88af6f0908a8b0db","modified":1492224953134},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"26666c1f472bf5f3fb9bc62081cca22b4de15ccb","modified":1492224953134},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1492224953134},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"ce272226a1570f5f7c70243b751a5b0fe1671a88","modified":1492224953134},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9b913b73d31d21f057f97115ffab93cfa578b884","modified":1492224953134},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"31127dcbf4c7b4ada53ffbf1638b5fe325b7cbc0","modified":1492224953134},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"748dbfbf9c08e719ddc775958003c64b00d39dab","modified":1492224953134},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"f23ac53ab901c48859dd29eee6e386b60ff956ba","modified":1492224953134},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1492224953134},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"5dbc0d0c897e46760e5dbee416530d485c747bba","modified":1492224953134},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"bce344d3a665b4c55230d2a91eac2ad16d6f32fd","modified":1492224953134},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"416988dca389e6e2fdfa51fa7f4ee07eb53f82fb","modified":1492224953134},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"1f6e2ce674735269599acc6d77b3ea18d31967fc","modified":1492224953134},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"4642e30010af8b2b037f5b43146b10a934941958","modified":1492224953134},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"c48d4a561d047b3705924949b3ab7b57bee94ecd","modified":1492224953134},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"86197902dfd3bededba10ba62b8f9f22e0420bde","modified":1492224953134},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"c4358416f0a116d7f4037542fa3b385947e80908","modified":1492224953150},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1492224953165},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1492224953165},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1492224953165},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1492224953165},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1492224953165},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1492224953165},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"82f33ad0842aa9c154d029e0dada2497d4eb1d57","modified":1492224953165},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","hash":"d71602cbca33b9ecdb7ab291b7f86a49530f3601","modified":1492224953165},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"ae6318aeb62ad4ce7a7e9a4cdacd93ffb004f0fb","modified":1492224953165},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","hash":"1d6aeda0480d0e4cb6198edf7719d601d4ae2ccc","modified":1492224953165},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1492224953181},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"3655f1fdf1e584c4d8e8d39026093ca306a5a341","modified":1492224953181},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"1573904b82807abbb32c97a3632c6c6808eaac50","modified":1492224953181},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"88af80502c44cd52ca81ffe7dc7276b7eccb06cf","modified":1492224953181},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"41ea797c68dbcff2f6fb3aba1d1043a22e7cc0f6","modified":1492224953196},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"a817b6c158cbc5bab3582713de9fe18a18a80552","modified":1492224953212},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1492224953196},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1492224953196},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"4237c6e9d59da349639de20e559e87c2c0218cfd","modified":1492224953212},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"4c4ef6e997d0c6e21de39c2daa0c768e12c8c6fa","modified":1492224953103},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"b3b783511bbd94af7e941abf8ff411885db7395b","modified":1492224953103},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"7fe4d4d656e86276c17cb4e48a560cb6a4def703","modified":1492224953103},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"167986d0f649516671ddf7193eebba7b421cd115","modified":1492224953103},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"53cde051e0337f4bf42fb8d6d7a79fa3fa6d4ef2","modified":1492224953103},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d63e0cacc53dd375fcc113465a4328c59ff5f2c1","modified":1492224953103},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"1a0d059799a298fe17c49a44298d32cebde93785","modified":1492224953103},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"0656e753f182c9f47fef7304c847b7587a85ef0d","modified":1492224953103},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"1727702eac5d326b5c81a667944a245016668231","modified":1492224953103},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"7fb593f90d74a99c21840679933b9ef6fdc16a61","modified":1492224953103},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"104b5c79cd891506e0beaf938b083685f1da8637","modified":1492224953103},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"f9760ecf186954cee3ba4a149be334e9ba296b89","modified":1492224953103},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"4e3838d7ac81d9ad133960f0f7ed58a44a015285","modified":1492224953103},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"8cf318644acc8b4978537c263290363e21c7f5af","modified":1492224953103},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"4783f85872bc7e218c1522a5c1c68cd27a5922db","modified":1492224953103},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"a45f5fce643eec4e1b927165229d560364bcace1","modified":1492224953103},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"caf263d1928496688c0e1419801eafd7e6919ce5","modified":1492224953103},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"fcd89ba4f6f48269e5caa73307e8689f41019896","modified":1492224953103},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"a200c0a1c5a895ac9dc41e0641a5dfcd766be99b","modified":1492224953103},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"cd9e214e502697f2f2db84eb721bac57a49b0fce","modified":1492224953103},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"61ec8a8481e8b76f2943235256c6d4f89c751c1c","modified":1492224953103},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"8355b0e9375b3245508efda0e18acd069c2aa767","modified":1492224953103},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"27deb3d3a243d30022055dac7dad851024099a8b","modified":1492224953103},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"5a982d8ef3b3623ea5f59e63728990f5623c1b57","modified":1492224953103},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"01567edaea6978628aa5521a122a85434c418bfd","modified":1492224953103},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"a497ea244df7dd97d1b961412b56f94cc4031e23","modified":1492224953103},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"350469437b20ecfd6f3ca45e400478f8e3f71cfb","modified":1492224953103},{"_id":"themes/next/source/css/_common/components/tags/exturl.styl","hash":"a3bdd71237afc112b2aa255f278cab6baeb25351","modified":1492224953118},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"2fe76476432b31993338cb45cdb3b29a518b6379","modified":1492224953118},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"8420b4be386469337243336aee694297875bd439","modified":1492224953118},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"3159b55f35c40bd08e55b00148c523760a708c51","modified":1492224953118},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"2ad1a2a9bbf6742d1b0762c4c623b68113d1e0fe","modified":1492224953118},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"e3ad37f2da35e330616a044621ffa50565a20c88","modified":1492224953118},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"7f2bdd6109614d35408ee5ac3335aad4464c69c7","modified":1492224953103},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"ac060861b27b764bc4012fc362a25a332df4045a","modified":1492224953118},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"761eba9811b050b25d548cc0854de4824b41eb08","modified":1492224953118},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"61f8cea3c01acd600e90e1bc2a07def405503748","modified":1492224953118},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"1153bb71edf253765145559674390e16dd67c633","modified":1492224953118},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"702be9e57dd6ff5fa99642a1f6e3df26215b8805","modified":1492224953118},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"394888efec32749b353292a59ec7f1b609d6325e","modified":1492224953118},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"c9f76d4f6806ef70fa2160c97afa0a0e0ae5373e","modified":1492224953118},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"e71652d3216e289c8548b1ea2357822c1476a425","modified":1492224953118},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"bba4f3bdb7517cd85376df3e1209b570c0548c69","modified":1492224953118},{"_id":"themes/next/source/css/_common/components/third-party/gentie.styl","hash":"cd526e814f9323a79fe835085d64867d34b3715d","modified":1492224953118},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"5dbeed535d63a50265d96b396a5440f9bb31e4ba","modified":1492224953118},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"a6e7d698702c2e383dde3fde2abde27951679084","modified":1492224953118},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"717cc7f82be9cc151e23a7678601ff2fd3a7fa1d","modified":1492224953118},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"15975ba7456b96916b1dbac448a1a0d2c38b8f3d","modified":1492224953118},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"6516b70ee9e44f1cf9443412cc31bcccb6cdb684","modified":1492224953118},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"dc944a01dd59f5ed2d44bb22fdb21fc3f455948f","modified":1492224953118},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"1f09be9bb38411f0629b58c3b23873589a6dbcaa","modified":1492224953134},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"a07aa12cc36ac5c819670c2a3c17d07ed7a08986","modified":1492224953134},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"1f09be9bb38411f0629b58c3b23873589a6dbcaa","modified":1492224953134},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1492224953165},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"ee948b4489aedeb548a77c9e45d8c7c5732fd62d","modified":1492224953165},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"6394c48092085788a8c0ef72670b0652006231a1","modified":1492224953165},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"d22b1629cb23a6181bebb70d0cf653ffe4b835c8","modified":1492224953165},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"51139a4c79573d372a347ef01a493222a1eaf10a","modified":1492224953165},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"b88b589f5f1aa1b3d87cc7eef34c281ff749b1ae","modified":1492224953165},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1492224953181},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1492224953181},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1492224953196},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"90a1b22129efc172e2dfcceeeb76bff58bc3192f","modified":1492224953165},{"_id":"themes/next/source/lib/three/three.min.js","hash":"26273b1cb4914850a89529b48091dc584f2c57b8","modified":1492224953196},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"b5483b11f8ba213e733b5b8af9927a04fec996f6","modified":1492224953181},{"_id":"public/atom.xml","hash":"d7e169d28dfb8e3f04d91a51802436582b3bbcb9","modified":1492225054635},{"_id":"public/search.xml","hash":"6fdc434b16f01f41dc8c48df5b31a8b8e9d5e750","modified":1492225054635},{"_id":"public/404.html","hash":"692e333ec34f298bba04790f9b46fc1f311e18aa","modified":1492225054955},{"_id":"public/categories/index.html","hash":"42a3ba3abd51e68ffa163ef4462279dc07314d29","modified":1492225054955},{"_id":"public/tags/index.html","hash":"aa75524d6f996a5b7477ce7780deb57bed0d7a22","modified":1492225054955},{"_id":"public/2017/04/15/Path实战之雷达图/index.html","hash":"3c08ec675fab978ee8137204ebda243fb33ac433","modified":1492225054955},{"_id":"public/archives/index.html","hash":"f6ceeb72118bf76b5b738b9bdceb109517d34d5a","modified":1492225054955},{"_id":"public/2017/04/15/[Android] 设计模式-策略模式/index.html","hash":"e5dea9454540eb5c327cb1c2d30a2cc4b638f0ac","modified":1492225054955},{"_id":"public/archives/2017/04/index.html","hash":"defd80676ebb88a3dfb7465da871b05ae21956c7","modified":1492225054955},{"_id":"public/index.html","hash":"a7daa38906005ca8b3c50fd45b745fcf5200197d","modified":1492225054971},{"_id":"public/archives/2017/index.html","hash":"87cd0cb6075a66c047a22aae433eaf795b21633b","modified":1492225054971},{"_id":"public/categories/Android/index.html","hash":"344d01032aaff2e1066e409f57812ab6f7412718","modified":1492225054971},{"_id":"public/tags/Path/index.html","hash":"aebf4ebf2a630568e337b9e6a330e97e73962978","modified":1492225054971},{"_id":"public/tags/设计模式/index.html","hash":"a7e730f294f65dff0b565bec2d621d5c873a762c","modified":1492225054971},{"_id":"public/tags/draw/index.html","hash":"defe4b7fa1d4af964a0a13cee8df2bc23711cef9","modified":1492225054971},{"_id":"public/CNAME","hash":"c469aa059833a7eb0bb338ee71e1bcb60d942ac2","modified":1492225054971},{"_id":"public/images/algolia_logo.svg","hash":"16505f61f19ba65f629dfd033f14ee9abcf18756","modified":1492225054971},{"_id":"public/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1492225054971},{"_id":"public/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1492225054971},{"_id":"public/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1492225054971},{"_id":"public/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1492225054971},{"_id":"public/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1492225054971},{"_id":"public/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1492225054971},{"_id":"public/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1492225054971},{"_id":"public/images/quote-r.svg","hash":"2a2a250b32a87c69dcc1b1976c74b747bedbfb41","modified":1492225054971},{"_id":"public/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1492225054971},{"_id":"public/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1492225054971},{"_id":"public/images/quote-l.svg","hash":"cd108d6f44351cadf8e6742565217f88818a0458","modified":1492225054971},{"_id":"public/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1492225054971},{"_id":"public/lib/fastclick/LICENSE","hash":"6f474ea75c42442da7bbcf2e9143ce98258efd8d","modified":1492225054971},{"_id":"public/lib/font-awesome/HELP-US-OUT.txt","hash":"ee33b2798b1e714b904d663436c6b3521011d1fa","modified":1492225054971},{"_id":"public/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1492225054971},{"_id":"public/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1492225054971},{"_id":"public/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1492225054971},{"_id":"public/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1492225054971},{"_id":"public/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1492225054971},{"_id":"public/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1492225054971},{"_id":"public/lib/font-awesome/css/font-awesome.css.map","hash":"1573904b82807abbb32c97a3632c6c6808eaac50","modified":1492225054971},{"_id":"public/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1492225054971},{"_id":"public/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1492225054971},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1492225055736},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1492225055752},{"_id":"public/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1492225055752},{"_id":"public/js/src/bootstrap.js","hash":"aab7be0a6e2724b3faa9338db93c19556c559625","modified":1492225055752},{"_id":"public/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1492225055752},{"_id":"public/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1492225055752},{"_id":"public/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1492225055752},{"_id":"public/js/src/post-details.js","hash":"af7a417dd1cb02465a7b98211653e7c6192e6d55","modified":1492225055752},{"_id":"public/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1492225055752},{"_id":"public/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1492225055752},{"_id":"public/js/src/motion.js","hash":"269414e84df544a4ccb88519f6abae4943db3c67","modified":1492225055752},{"_id":"public/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1492225055752},{"_id":"public/lib/canvas-ribbon/canvas-ribbon.js","hash":"b614b73ba49ca9136fed7c387ee8df72fe65118f","modified":1492225055752},{"_id":"public/js/src/utils.js","hash":"2041eae5ac81c392067bfbd1bba4399cb37beea1","modified":1492225055752},{"_id":"public/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1492225055752},{"_id":"public/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1492225055752},{"_id":"public/lib/fastclick/README.html","hash":"da3c74d484c73cc7df565e8abbfa4d6a5a18d4da","modified":1492225055752},{"_id":"public/lib/fastclick/bower.json","hash":"4dcecf83afddba148464d5339c93f6d0aa9f42e9","modified":1492225055752},{"_id":"public/lib/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1492225055752},{"_id":"public/lib/jquery_lazyload/CONTRIBUTING.html","hash":"a6358170d346af13b1452ac157b60505bec7015c","modified":1492225055752},{"_id":"public/lib/jquery_lazyload/README.html","hash":"bde24335f6bc09d8801c0dcd7274f71b466552bd","modified":1492225055752},{"_id":"public/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1492225055752},{"_id":"public/lib/jquery_lazyload/bower.json","hash":"ae3c3b61e6e7f9e1d7e3585ad854380ecc04cf53","modified":1492225055752},{"_id":"public/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1492225055752},{"_id":"public/lib/velocity/bower.json","hash":"0ef14e7ccdfba5db6eb3f8fc6aa3b47282c36409","modified":1492225055752},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1492225055752},{"_id":"public/js/src/schemes/pisces.js","hash":"79da92119bc246fe05d1626ac98426a83ec90a94","modified":1492225055752},{"_id":"public/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1492225055752},{"_id":"public/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1492225055752},{"_id":"public/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1492225055752},{"_id":"public/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1492225055752},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1492225055752},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1492225055752},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1492225055752},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1492225055752},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1492225055752},{"_id":"public/css/main.css","hash":"557bb0966c3156faae55162468b3aa8f32ba7e3c","modified":1492225055752},{"_id":"public/lib/three/three-waves.min.js","hash":"5b38ae00297ffc07f433c632c3dbf7bde4cdf39a","modified":1492225055752},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1492225055752},{"_id":"public/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1492225055752},{"_id":"public/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1492225055752},{"_id":"public/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1492225055752},{"_id":"public/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1492225055752},{"_id":"public/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1492225055752},{"_id":"public/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1492225055752},{"_id":"public/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1492225055752},{"_id":"public/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1492225055752},{"_id":"public/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1492225055752},{"_id":"public/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1492225055752},{"_id":"public/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1492225055752},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1492225055752},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1492225055752},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"b5483b11f8ba213e733b5b8af9927a04fec996f6","modified":1492225055767}],"Category":[{"name":"Android","_id":"cj1io9odf0005doektiswlepy"}],"Data":[],"Page":[{"_content":"<!DOCTYPE HTML>\n<html>\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\"/>\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n  <meta name=\"robots\" content=\"all\" />\n  <meta name=\"robots\" content=\"index,follow\"/>\n  <link rel=\"stylesheet\" type=\"text/css\" href=\"https://qzone.qq.com/gy/404/style/404style.css\">\n</head>\n<body>\n  <script type=\"text/plain\" src=\"http://www.qq.com/404/search_children.js\"\n          charset=\"utf-8\" homePageUrl=\"/\"\n          homePageName=\"Go Home\">\n  </script>\n  <script src=\"https://qzone.qq.com/gy/404/data.js\" charset=\"utf-8\"></script>\n  <script src=\"https://qzone.qq.com/gy/404/page.js\" charset=\"utf-8\"></script>\n</body>\n</html>","source":"404.html","raw":"<!DOCTYPE HTML>\n<html>\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\"/>\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n  <meta name=\"robots\" content=\"all\" />\n  <meta name=\"robots\" content=\"index,follow\"/>\n  <link rel=\"stylesheet\" type=\"text/css\" href=\"https://qzone.qq.com/gy/404/style/404style.css\">\n</head>\n<body>\n  <script type=\"text/plain\" src=\"http://www.qq.com/404/search_children.js\"\n          charset=\"utf-8\" homePageUrl=\"/\"\n          homePageName=\"Go Home\">\n  </script>\n  <script src=\"https://qzone.qq.com/gy/404/data.js\" charset=\"utf-8\"></script>\n  <script src=\"https://qzone.qq.com/gy/404/page.js\" charset=\"utf-8\"></script>\n</body>\n</html>","date":"2017-04-15T02:55:53.040Z","updated":"2017-04-15T02:55:53.040Z","path":"404.html","title":"","comments":1,"layout":"page","_id":"cj1io9o6h0000doekioyao42r","content":"<!DOCTYPE HTML>\n<html>\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\">\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\n  <meta name=\"robots\" content=\"all\">\n  <meta name=\"robots\" content=\"index,follow\">\n  <link rel=\"stylesheet\" type=\"text/css\" href=\"https://qzone.qq.com/gy/404/style/404style.css\">\n</head>\n<body>\n  <script type=\"text/plain\" src=\"http://www.qq.com/404/search_children.js\" charset=\"utf-8\" homepageurl=\"/\" homepagename=\"Go Home\">\n  </script>\n  <script src=\"https://qzone.qq.com/gy/404/data.js\" charset=\"utf-8\"></script>\n  <script src=\"https://qzone.qq.com/gy/404/page.js\" charset=\"utf-8\"></script>\n</body>\n</html>","site":{"data":{}},"excerpt":"","more":"<!DOCTYPE HTML>\n<html>\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\"/>\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n  <meta name=\"robots\" content=\"all\" />\n  <meta name=\"robots\" content=\"index,follow\"/>\n  <link rel=\"stylesheet\" type=\"text/css\" href=\"https://qzone.qq.com/gy/404/style/404style.css\">\n</head>\n<body>\n  <script type=\"text/plain\" src=\"http://www.qq.com/404/search_children.js\"\n          charset=\"utf-8\" homePageUrl=\"/\"\n          homePageName=\"Go Home\">\n  </script>\n  <script src=\"https://qzone.qq.com/gy/404/data.js\" charset=\"utf-8\"></script>\n  <script src=\"https://qzone.qq.com/gy/404/page.js\" charset=\"utf-8\"></script>\n</body>\n</html>"},{"title":"分类","date":"2017-04-14T05:06:28.000Z","type":"categories","comments":0,"_content":"","source":"categories/index.md","raw":"---\ntitle: 分类\ndate: 2017-04-14 13:06:28\ntype: categories\ncomments: false\n---\n","updated":"2017-04-15T02:55:53.040Z","path":"categories/index.html","layout":"page","_id":"cj1io9od00002doeknfnslw9y","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"标签","date":"2017-04-14T05:04:39.000Z","type":"tags","comments":0,"_content":"","source":"tags/index.md","raw":"---\ntitle: 标签\ndate: 2017-04-14 13:04:39\ntype: tags\ncomments: false\n---\n","updated":"2017-04-15T02:55:53.040Z","path":"tags/index.html","layout":"page","_id":"cj1io9od00004doekx2q1afc0","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"Path 实战","_content":"\n# 第一步：绘制蜘蛛网络\n\n\t    private void init() {\n\t        mainPaint=new Paint();\n\t        mainPaint.setColor(Color.BLACK);\n\t        mainPaint.setAntiAlias(true);\n\t        mainPaint.setStrokeWidth(1);\n\t        mainPaint.setStyle(Paint.Style.STROKE);\n\t    }\n\n\t    @Override\n\t    protected void onSizeChanged(int w, int h, int oldw, int oldh) {\n\t        radius=Math.min(w,h)/2*0.9f;\n\t        centerX=w/2;\n\t        centerY=h/2;\n\t        //一旦size发生改变，重新绘制\n\t        postInvalidate();\n\t        super.onSizeChanged(w, h, oldw, oldh);\n\t    }\n\n\t    @Override\n\t    protected void onDraw(Canvas canvas) {\n\t        drawPolygon(canvas);\n\t    }\n\n\t    /**\n\t     * 绘制多边形\n\t     * @param canvas\n\t     */\n\t    private void drawPolygon(Canvas canvas){\n\t        Path path=new Path();\n\t        //1度=1*PI/180   360度=2*PI   那么我们每旋转一次的角度为2*PI/内角个数\n\t        //中心与相邻两个内角相连的夹角角度\n\t        angle= (float) (2*Math.PI/count);\n\t        //每个蛛丝之间的间距\n\t        float r= radius/(count-1);\n\t        for (int i = 0; i < count; i++) {\n\t            //当前半径\n\t            float curR=r*i;\n\t            path.reset();\n\t            for (int j = 0; j < count; j++) {\n\t                if(j==0){\n\t                    path.moveTo(centerX+curR,centerY);\n\t                }else {\n\t                    //对于直角三角形sin(x)是对边比斜边，cos(x)是底边比斜边，tan(x)是对边比底边\n\t                    //因此可以推导出:底边(x坐标)=斜边(半径)*cos(夹角角度)\n\t                    //               对边(y坐标)=斜边(半径)*sin(夹角角度)\n\t                    float x = (float) (centerX+curR*Math.cos(angle*j));\n\t                    float y = (float) (centerY+curR*Math.sin(angle*j));\n\t                    path.lineTo(x,y);\n\t                }\n\t            }\n\t            path.close();\n\t            canvas.drawPath(path,mainPaint);\n\t        }\n<!-- more -->\n\n绘制蜘蛛网络其实就是绘制指定边数的正多边形，这一步比较简单，比较难的可能就是每个顶点的算法，相关注释我都写了，还有一张来自互联网的图以助于思考，如下：\n\n\n![多边形夹角示意图](http://upload-images.jianshu.io/upload_images/3054656-f380ea0f04b8619b.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n绘制出的多边形成品如下:\n\n![多边形效果.gif](http://upload-images.jianshu.io/upload_images/3054656-35a0029632035330.gif?imageMogr2/auto-orient/strip)\n\n\n动画效果只是写了 set 方法，用 handler 实现,代码如下：\n\n    //设置数值种类\n    public void setCount(int count) {\n        this.count = count;\n        postInvalidate();\n    }\n\n    //设置蜘蛛网颜色\n    public void setMainPaint(Paint mainPaint) {\n        this.mainPaint = mainPaint;\n        postInvalidate();\n    }\n\n调用方法:\n\n    mainPaint=new Paint();\n    mainPaint.setAntiAlias(true);\n    mainPaint.setStrokeWidth(1);\n    mainPaint.setStyle(Paint.Style.STROKE);\n    Handler handler=new Handler();\n    for (int i = 3; i < 20; i++) {\n    final int finalI = i;\n    handler.postDelayed(new Runnable() {\n        @Override\n        public void run() {\n            mRdv.setCount(finalI);\n            mainPaint.setStrokeWidth(finalI);\n            mRdv.setMainPaint(mainPaint);\n        }\n    },i*300);\n    }\n\n# 第二步：绘制对角线\n    /**\n     * 绘制直线\n     */\n    private void drawLines(Canvas canvas){\n        Path path=new Path();\n        for (int i = 0; i < count; i++) {\n            path.reset();\n            path.moveTo(centerX,centerY);\n            float x = (float) (centerX+radius*Math.cos(angle*i));\n            float y = (float) (centerY+radius*Math.sin(angle*i));\n            path.lineTo(x,y);\n            canvas.drawPath(path,mainPaint);\n        }\n    }\n\n这一步比较简单，就是将中心点和各个顶点连接起来，效果如下:\n\n\n![多边形效果.gif](http://upload-images.jianshu.io/upload_images/3054656-e8349daa51b18b38.gif?imageMogr2/auto-orient/strip)\n\n# 第三步：绘制标题文字\n    /**\n     * 绘制标题文字\n     *\n     * @param canvas\n     */\n    private void drawTitle(Canvas canvas) {\n        if (count != titles.size()) {\n            return;\n        }\n        //相关知识点:http://mikewang.blog.51cto.com/3826268/871765/\n        Paint.FontMetrics fontMetrics = textPaint.getFontMetrics();\n        float fontHeight = fontMetrics.descent - fontMetrics.ascent;\n        //绘制文字时不让文字和雷达图形交叉,加大绘制半径\n        float textRadius = radius + fontHeight;\n        double pi = Math.PI;\n        for (int i = 0; i < count; i++) {\n            float x = (float) (centerX + textRadius * Math.cos(angle * i));\n            float y = (float) (centerY + textRadius * Math.sin(angle * i));\n            //当前绘制标题所在顶点角度\n            float degrees = angle * i;\n            //从右下角开始顺时针画起,与真实坐标系相反\n            if (degrees >= 0 && degrees < pi / 2) {//第四象限\n                float dis=textPaint.measureText(titles.get(i))/(titles.get(i).length()-1);\n                canvas.drawText(titles.get(i), x+dis, y, textPaint);\n            } else if (degrees >= pi / 2 && degrees < pi) {//第三象限\n                float dis=textPaint.measureText(titles.get(i))/(titles.get(i).length()-1);\n                canvas.drawText(titles.get(i), x-dis, y, textPaint);\n            } else if (degrees >= pi && degrees < 3 * pi / 2) {//第二象限\n                float dis=textPaint.measureText(titles.get(i))/(titles.get(i).length());\n                canvas.drawText(titles.get(i), x-dis, y, textPaint);\n            } else if (degrees >= 3 * pi / 2 && degrees <= 2 * pi) {//第一象限\n                canvas.drawText(titles.get(i), x, y, textPaint);\n            }\n\n        }\n\n    }\n\n效果如下：\n\n![image.png](http://upload-images.jianshu.io/upload_images/3054656-c9132f5ff1404eaf.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n# 第四步：绘制覆盖区域\n要绘制覆盖区域，首先要指定最大值和每个分类的具体数值,有了这些数值之后，就可以绘制了。\n代码如下：\n\n    /**\n     * 绘制覆盖区域\n     */\n    private void drawRegion(Canvas canvas){\n        valuePaint.setAlpha(255);\n        Path path=new Path();\n        for (int i = 0; i < count; i++) {\n            //计算该数值与最大值比例\n            Double perCenter = data.get(i)/maxValue;\n            //小圆点所在位置距离圆心的距离\n            double perRadius=perCenter*radius;\n            float x = (float) (centerX + perRadius * Math.cos(angle * i));\n            float y = (float) (centerY + perRadius * Math.sin(angle * i));\n            if(i==0){\n                path.moveTo(x,y);\n            }else {\n                path.lineTo(x,y);\n            }\n            //绘制小圆点\n            canvas.drawCircle(x,y,10,valuePaint);\n        }\n        //闭合覆盖区域\n        path.close();\n        valuePaint.setStyle(Paint.Style.STROKE);\n        //绘制覆盖区域外的连线\n        canvas.drawPath(path, valuePaint);\n        //填充覆盖区域\n        valuePaint.setAlpha(128);\n        valuePaint.setStyle(Paint.Style.FILL);\n        canvas.drawPath(path,valuePaint);\n    }\n\n看一下效果：\n\n\n![image.png](http://upload-images.jianshu.io/upload_images/3054656-d62b189d8dce1fac.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n再来看一下动态的效果吧：\n\n\n![多边形效果.gif](http://upload-images.jianshu.io/upload_images/3054656-50a0b0225608fc7b.gif?imageMogr2/auto-orient/strip)\n\n# 总结\n终于完成了,全部代码在下面：\n\n[Android雷达图全部代码 ](https://github.com/jutao/AndroidNode/blob/master/2017/2017.3/%E9%9B%B7%E8%BE%BE%E5%9B%BE%E5%85%A8%E9%83%A8%E4%BB%A3%E7%A0%81.md)\n\n主要是参考 crazy__chen 大神的博客，链接贴在下面，做了一遍其实还蛮简单的，这个控件还有很多不完善的，如果实际使用需要改善的地方还有很多，如果有不足希望大家可以告诉我，谢谢！！\n\n参考资料\n\n[Android雷达图(蜘蛛网图)绘制 ](http://blog.csdn.net/crazy__chen/article/details/50163693)\n\n[Path之基本操作](https://github.com/GcsSloop/AndroidNote/blob/master/CustomView/Advance/%5B05%5DPath_Basic.md)\n","source":"_posts/Path实战之雷达图.md","raw":"---\ntitle: Path 实战\ntags:\n- Path\n- draw\ncategories:\n- Android\n---\n\n# 第一步：绘制蜘蛛网络\n\n\t    private void init() {\n\t        mainPaint=new Paint();\n\t        mainPaint.setColor(Color.BLACK);\n\t        mainPaint.setAntiAlias(true);\n\t        mainPaint.setStrokeWidth(1);\n\t        mainPaint.setStyle(Paint.Style.STROKE);\n\t    }\n\n\t    @Override\n\t    protected void onSizeChanged(int w, int h, int oldw, int oldh) {\n\t        radius=Math.min(w,h)/2*0.9f;\n\t        centerX=w/2;\n\t        centerY=h/2;\n\t        //一旦size发生改变，重新绘制\n\t        postInvalidate();\n\t        super.onSizeChanged(w, h, oldw, oldh);\n\t    }\n\n\t    @Override\n\t    protected void onDraw(Canvas canvas) {\n\t        drawPolygon(canvas);\n\t    }\n\n\t    /**\n\t     * 绘制多边形\n\t     * @param canvas\n\t     */\n\t    private void drawPolygon(Canvas canvas){\n\t        Path path=new Path();\n\t        //1度=1*PI/180   360度=2*PI   那么我们每旋转一次的角度为2*PI/内角个数\n\t        //中心与相邻两个内角相连的夹角角度\n\t        angle= (float) (2*Math.PI/count);\n\t        //每个蛛丝之间的间距\n\t        float r= radius/(count-1);\n\t        for (int i = 0; i < count; i++) {\n\t            //当前半径\n\t            float curR=r*i;\n\t            path.reset();\n\t            for (int j = 0; j < count; j++) {\n\t                if(j==0){\n\t                    path.moveTo(centerX+curR,centerY);\n\t                }else {\n\t                    //对于直角三角形sin(x)是对边比斜边，cos(x)是底边比斜边，tan(x)是对边比底边\n\t                    //因此可以推导出:底边(x坐标)=斜边(半径)*cos(夹角角度)\n\t                    //               对边(y坐标)=斜边(半径)*sin(夹角角度)\n\t                    float x = (float) (centerX+curR*Math.cos(angle*j));\n\t                    float y = (float) (centerY+curR*Math.sin(angle*j));\n\t                    path.lineTo(x,y);\n\t                }\n\t            }\n\t            path.close();\n\t            canvas.drawPath(path,mainPaint);\n\t        }\n<!-- more -->\n\n绘制蜘蛛网络其实就是绘制指定边数的正多边形，这一步比较简单，比较难的可能就是每个顶点的算法，相关注释我都写了，还有一张来自互联网的图以助于思考，如下：\n\n\n![多边形夹角示意图](http://upload-images.jianshu.io/upload_images/3054656-f380ea0f04b8619b.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n绘制出的多边形成品如下:\n\n![多边形效果.gif](http://upload-images.jianshu.io/upload_images/3054656-35a0029632035330.gif?imageMogr2/auto-orient/strip)\n\n\n动画效果只是写了 set 方法，用 handler 实现,代码如下：\n\n    //设置数值种类\n    public void setCount(int count) {\n        this.count = count;\n        postInvalidate();\n    }\n\n    //设置蜘蛛网颜色\n    public void setMainPaint(Paint mainPaint) {\n        this.mainPaint = mainPaint;\n        postInvalidate();\n    }\n\n调用方法:\n\n    mainPaint=new Paint();\n    mainPaint.setAntiAlias(true);\n    mainPaint.setStrokeWidth(1);\n    mainPaint.setStyle(Paint.Style.STROKE);\n    Handler handler=new Handler();\n    for (int i = 3; i < 20; i++) {\n    final int finalI = i;\n    handler.postDelayed(new Runnable() {\n        @Override\n        public void run() {\n            mRdv.setCount(finalI);\n            mainPaint.setStrokeWidth(finalI);\n            mRdv.setMainPaint(mainPaint);\n        }\n    },i*300);\n    }\n\n# 第二步：绘制对角线\n    /**\n     * 绘制直线\n     */\n    private void drawLines(Canvas canvas){\n        Path path=new Path();\n        for (int i = 0; i < count; i++) {\n            path.reset();\n            path.moveTo(centerX,centerY);\n            float x = (float) (centerX+radius*Math.cos(angle*i));\n            float y = (float) (centerY+radius*Math.sin(angle*i));\n            path.lineTo(x,y);\n            canvas.drawPath(path,mainPaint);\n        }\n    }\n\n这一步比较简单，就是将中心点和各个顶点连接起来，效果如下:\n\n\n![多边形效果.gif](http://upload-images.jianshu.io/upload_images/3054656-e8349daa51b18b38.gif?imageMogr2/auto-orient/strip)\n\n# 第三步：绘制标题文字\n    /**\n     * 绘制标题文字\n     *\n     * @param canvas\n     */\n    private void drawTitle(Canvas canvas) {\n        if (count != titles.size()) {\n            return;\n        }\n        //相关知识点:http://mikewang.blog.51cto.com/3826268/871765/\n        Paint.FontMetrics fontMetrics = textPaint.getFontMetrics();\n        float fontHeight = fontMetrics.descent - fontMetrics.ascent;\n        //绘制文字时不让文字和雷达图形交叉,加大绘制半径\n        float textRadius = radius + fontHeight;\n        double pi = Math.PI;\n        for (int i = 0; i < count; i++) {\n            float x = (float) (centerX + textRadius * Math.cos(angle * i));\n            float y = (float) (centerY + textRadius * Math.sin(angle * i));\n            //当前绘制标题所在顶点角度\n            float degrees = angle * i;\n            //从右下角开始顺时针画起,与真实坐标系相反\n            if (degrees >= 0 && degrees < pi / 2) {//第四象限\n                float dis=textPaint.measureText(titles.get(i))/(titles.get(i).length()-1);\n                canvas.drawText(titles.get(i), x+dis, y, textPaint);\n            } else if (degrees >= pi / 2 && degrees < pi) {//第三象限\n                float dis=textPaint.measureText(titles.get(i))/(titles.get(i).length()-1);\n                canvas.drawText(titles.get(i), x-dis, y, textPaint);\n            } else if (degrees >= pi && degrees < 3 * pi / 2) {//第二象限\n                float dis=textPaint.measureText(titles.get(i))/(titles.get(i).length());\n                canvas.drawText(titles.get(i), x-dis, y, textPaint);\n            } else if (degrees >= 3 * pi / 2 && degrees <= 2 * pi) {//第一象限\n                canvas.drawText(titles.get(i), x, y, textPaint);\n            }\n\n        }\n\n    }\n\n效果如下：\n\n![image.png](http://upload-images.jianshu.io/upload_images/3054656-c9132f5ff1404eaf.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n# 第四步：绘制覆盖区域\n要绘制覆盖区域，首先要指定最大值和每个分类的具体数值,有了这些数值之后，就可以绘制了。\n代码如下：\n\n    /**\n     * 绘制覆盖区域\n     */\n    private void drawRegion(Canvas canvas){\n        valuePaint.setAlpha(255);\n        Path path=new Path();\n        for (int i = 0; i < count; i++) {\n            //计算该数值与最大值比例\n            Double perCenter = data.get(i)/maxValue;\n            //小圆点所在位置距离圆心的距离\n            double perRadius=perCenter*radius;\n            float x = (float) (centerX + perRadius * Math.cos(angle * i));\n            float y = (float) (centerY + perRadius * Math.sin(angle * i));\n            if(i==0){\n                path.moveTo(x,y);\n            }else {\n                path.lineTo(x,y);\n            }\n            //绘制小圆点\n            canvas.drawCircle(x,y,10,valuePaint);\n        }\n        //闭合覆盖区域\n        path.close();\n        valuePaint.setStyle(Paint.Style.STROKE);\n        //绘制覆盖区域外的连线\n        canvas.drawPath(path, valuePaint);\n        //填充覆盖区域\n        valuePaint.setAlpha(128);\n        valuePaint.setStyle(Paint.Style.FILL);\n        canvas.drawPath(path,valuePaint);\n    }\n\n看一下效果：\n\n\n![image.png](http://upload-images.jianshu.io/upload_images/3054656-d62b189d8dce1fac.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n再来看一下动态的效果吧：\n\n\n![多边形效果.gif](http://upload-images.jianshu.io/upload_images/3054656-50a0b0225608fc7b.gif?imageMogr2/auto-orient/strip)\n\n# 总结\n终于完成了,全部代码在下面：\n\n[Android雷达图全部代码 ](https://github.com/jutao/AndroidNode/blob/master/2017/2017.3/%E9%9B%B7%E8%BE%BE%E5%9B%BE%E5%85%A8%E9%83%A8%E4%BB%A3%E7%A0%81.md)\n\n主要是参考 crazy__chen 大神的博客，链接贴在下面，做了一遍其实还蛮简单的，这个控件还有很多不完善的，如果实际使用需要改善的地方还有很多，如果有不足希望大家可以告诉我，谢谢！！\n\n参考资料\n\n[Android雷达图(蜘蛛网图)绘制 ](http://blog.csdn.net/crazy__chen/article/details/50163693)\n\n[Path之基本操作](https://github.com/GcsSloop/AndroidNote/blob/master/CustomView/Advance/%5B05%5DPath_Basic.md)\n","slug":"Path实战之雷达图","published":1,"date":"2017-04-15T02:55:53.040Z","updated":"2017-04-15T02:55:53.040Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj1io9ock0001doekq5cj01w5","content":"<h1 id=\"第一步：绘制蜘蛛网络\"><a href=\"#第一步：绘制蜘蛛网络\" class=\"headerlink\" title=\"第一步：绘制蜘蛛网络\"></a>第一步：绘制蜘蛛网络</h1><pre><code>private void init() {\n    mainPaint=new Paint();\n    mainPaint.setColor(Color.BLACK);\n    mainPaint.setAntiAlias(true);\n    mainPaint.setStrokeWidth(1);\n    mainPaint.setStyle(Paint.Style.STROKE);\n}\n\n@Override\nprotected void onSizeChanged(int w, int h, int oldw, int oldh) {\n    radius=Math.min(w,h)/2*0.9f;\n    centerX=w/2;\n    centerY=h/2;\n    //一旦size发生改变，重新绘制\n    postInvalidate();\n    super.onSizeChanged(w, h, oldw, oldh);\n}\n\n@Override\nprotected void onDraw(Canvas canvas) {\n    drawPolygon(canvas);\n}\n\n/**\n * 绘制多边形\n * @param canvas\n */\nprivate void drawPolygon(Canvas canvas){\n    Path path=new Path();\n    //1度=1*PI/180   360度=2*PI   那么我们每旋转一次的角度为2*PI/内角个数\n    //中心与相邻两个内角相连的夹角角度\n    angle= (float) (2*Math.PI/count);\n    //每个蛛丝之间的间距\n    float r= radius/(count-1);\n    for (int i = 0; i &lt; count; i++) {\n        //当前半径\n        float curR=r*i;\n        path.reset();\n        for (int j = 0; j &lt; count; j++) {\n            if(j==0){\n                path.moveTo(centerX+curR,centerY);\n            }else {\n                //对于直角三角形sin(x)是对边比斜边，cos(x)是底边比斜边，tan(x)是对边比底边\n                //因此可以推导出:底边(x坐标)=斜边(半径)*cos(夹角角度)\n                //               对边(y坐标)=斜边(半径)*sin(夹角角度)\n                float x = (float) (centerX+curR*Math.cos(angle*j));\n                float y = (float) (centerY+curR*Math.sin(angle*j));\n                path.lineTo(x,y);\n            }\n        }\n        path.close();\n        canvas.drawPath(path,mainPaint);\n    }\n</code></pre><a id=\"more\"></a>\n<p>绘制蜘蛛网络其实就是绘制指定边数的正多边形，这一步比较简单，比较难的可能就是每个顶点的算法，相关注释我都写了，还有一张来自互联网的图以助于思考，如下：</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/3054656-f380ea0f04b8619b.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"多边形夹角示意图\"></p>\n<p>绘制出的多边形成品如下:</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/3054656-35a0029632035330.gif?imageMogr2/auto-orient/strip\" alt=\"多边形效果.gif\"></p>\n<p>动画效果只是写了 set 方法，用 handler 实现,代码如下：</p>\n<pre><code>//设置数值种类\npublic void setCount(int count) {\n    this.count = count;\n    postInvalidate();\n}\n\n//设置蜘蛛网颜色\npublic void setMainPaint(Paint mainPaint) {\n    this.mainPaint = mainPaint;\n    postInvalidate();\n}\n</code></pre><p>调用方法:</p>\n<pre><code>mainPaint=new Paint();\nmainPaint.setAntiAlias(true);\nmainPaint.setStrokeWidth(1);\nmainPaint.setStyle(Paint.Style.STROKE);\nHandler handler=new Handler();\nfor (int i = 3; i &lt; 20; i++) {\nfinal int finalI = i;\nhandler.postDelayed(new Runnable() {\n    @Override\n    public void run() {\n        mRdv.setCount(finalI);\n        mainPaint.setStrokeWidth(finalI);\n        mRdv.setMainPaint(mainPaint);\n    }\n},i*300);\n}\n</code></pre><h1 id=\"第二步：绘制对角线\"><a href=\"#第二步：绘制对角线\" class=\"headerlink\" title=\"第二步：绘制对角线\"></a>第二步：绘制对角线</h1><pre><code>/**\n * 绘制直线\n */\nprivate void drawLines(Canvas canvas){\n    Path path=new Path();\n    for (int i = 0; i &lt; count; i++) {\n        path.reset();\n        path.moveTo(centerX,centerY);\n        float x = (float) (centerX+radius*Math.cos(angle*i));\n        float y = (float) (centerY+radius*Math.sin(angle*i));\n        path.lineTo(x,y);\n        canvas.drawPath(path,mainPaint);\n    }\n}\n</code></pre><p>这一步比较简单，就是将中心点和各个顶点连接起来，效果如下:</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/3054656-e8349daa51b18b38.gif?imageMogr2/auto-orient/strip\" alt=\"多边形效果.gif\"></p>\n<h1 id=\"第三步：绘制标题文字\"><a href=\"#第三步：绘制标题文字\" class=\"headerlink\" title=\"第三步：绘制标题文字\"></a>第三步：绘制标题文字</h1><pre><code>/**\n * 绘制标题文字\n *\n * @param canvas\n */\nprivate void drawTitle(Canvas canvas) {\n    if (count != titles.size()) {\n        return;\n    }\n    //相关知识点:http://mikewang.blog.51cto.com/3826268/871765/\n    Paint.FontMetrics fontMetrics = textPaint.getFontMetrics();\n    float fontHeight = fontMetrics.descent - fontMetrics.ascent;\n    //绘制文字时不让文字和雷达图形交叉,加大绘制半径\n    float textRadius = radius + fontHeight;\n    double pi = Math.PI;\n    for (int i = 0; i &lt; count; i++) {\n        float x = (float) (centerX + textRadius * Math.cos(angle * i));\n        float y = (float) (centerY + textRadius * Math.sin(angle * i));\n        //当前绘制标题所在顶点角度\n        float degrees = angle * i;\n        //从右下角开始顺时针画起,与真实坐标系相反\n        if (degrees &gt;= 0 &amp;&amp; degrees &lt; pi / 2) {//第四象限\n            float dis=textPaint.measureText(titles.get(i))/(titles.get(i).length()-1);\n            canvas.drawText(titles.get(i), x+dis, y, textPaint);\n        } else if (degrees &gt;= pi / 2 &amp;&amp; degrees &lt; pi) {//第三象限\n            float dis=textPaint.measureText(titles.get(i))/(titles.get(i).length()-1);\n            canvas.drawText(titles.get(i), x-dis, y, textPaint);\n        } else if (degrees &gt;= pi &amp;&amp; degrees &lt; 3 * pi / 2) {//第二象限\n            float dis=textPaint.measureText(titles.get(i))/(titles.get(i).length());\n            canvas.drawText(titles.get(i), x-dis, y, textPaint);\n        } else if (degrees &gt;= 3 * pi / 2 &amp;&amp; degrees &lt;= 2 * pi) {//第一象限\n            canvas.drawText(titles.get(i), x, y, textPaint);\n        }\n\n    }\n\n}\n</code></pre><p>效果如下：</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/3054656-c9132f5ff1404eaf.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image.png\"></p>\n<h1 id=\"第四步：绘制覆盖区域\"><a href=\"#第四步：绘制覆盖区域\" class=\"headerlink\" title=\"第四步：绘制覆盖区域\"></a>第四步：绘制覆盖区域</h1><p>要绘制覆盖区域，首先要指定最大值和每个分类的具体数值,有了这些数值之后，就可以绘制了。<br>代码如下：</p>\n<pre><code>/**\n * 绘制覆盖区域\n */\nprivate void drawRegion(Canvas canvas){\n    valuePaint.setAlpha(255);\n    Path path=new Path();\n    for (int i = 0; i &lt; count; i++) {\n        //计算该数值与最大值比例\n        Double perCenter = data.get(i)/maxValue;\n        //小圆点所在位置距离圆心的距离\n        double perRadius=perCenter*radius;\n        float x = (float) (centerX + perRadius * Math.cos(angle * i));\n        float y = (float) (centerY + perRadius * Math.sin(angle * i));\n        if(i==0){\n            path.moveTo(x,y);\n        }else {\n            path.lineTo(x,y);\n        }\n        //绘制小圆点\n        canvas.drawCircle(x,y,10,valuePaint);\n    }\n    //闭合覆盖区域\n    path.close();\n    valuePaint.setStyle(Paint.Style.STROKE);\n    //绘制覆盖区域外的连线\n    canvas.drawPath(path, valuePaint);\n    //填充覆盖区域\n    valuePaint.setAlpha(128);\n    valuePaint.setStyle(Paint.Style.FILL);\n    canvas.drawPath(path,valuePaint);\n}\n</code></pre><p>看一下效果：</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/3054656-d62b189d8dce1fac.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image.png\"></p>\n<p>再来看一下动态的效果吧：</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/3054656-50a0b0225608fc7b.gif?imageMogr2/auto-orient/strip\" alt=\"多边形效果.gif\"></p>\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><p>终于完成了,全部代码在下面：</p>\n<p><a href=\"https://github.com/jutao/AndroidNode/blob/master/2017/2017.3/%E9%9B%B7%E8%BE%BE%E5%9B%BE%E5%85%A8%E9%83%A8%E4%BB%A3%E7%A0%81.md\" target=\"_blank\" rel=\"external\">Android雷达图全部代码 </a></p>\n<p>主要是参考 crazy__chen 大神的博客，链接贴在下面，做了一遍其实还蛮简单的，这个控件还有很多不完善的，如果实际使用需要改善的地方还有很多，如果有不足希望大家可以告诉我，谢谢！！</p>\n<p>参考资料</p>\n<p><a href=\"http://blog.csdn.net/crazy__chen/article/details/50163693\" target=\"_blank\" rel=\"external\">Android雷达图(蜘蛛网图)绘制 </a></p>\n<p><a href=\"https://github.com/GcsSloop/AndroidNote/blob/master/CustomView/Advance/%5B05%5DPath_Basic.md\" target=\"_blank\" rel=\"external\">Path之基本操作</a></p>\n","site":{"data":{}},"excerpt":"<h1 id=\"第一步：绘制蜘蛛网络\"><a href=\"#第一步：绘制蜘蛛网络\" class=\"headerlink\" title=\"第一步：绘制蜘蛛网络\"></a>第一步：绘制蜘蛛网络</h1><pre><code>private void init() {\n    mainPaint=new Paint();\n    mainPaint.setColor(Color.BLACK);\n    mainPaint.setAntiAlias(true);\n    mainPaint.setStrokeWidth(1);\n    mainPaint.setStyle(Paint.Style.STROKE);\n}\n\n@Override\nprotected void onSizeChanged(int w, int h, int oldw, int oldh) {\n    radius=Math.min(w,h)/2*0.9f;\n    centerX=w/2;\n    centerY=h/2;\n    //一旦size发生改变，重新绘制\n    postInvalidate();\n    super.onSizeChanged(w, h, oldw, oldh);\n}\n\n@Override\nprotected void onDraw(Canvas canvas) {\n    drawPolygon(canvas);\n}\n\n/**\n * 绘制多边形\n * @param canvas\n */\nprivate void drawPolygon(Canvas canvas){\n    Path path=new Path();\n    //1度=1*PI/180   360度=2*PI   那么我们每旋转一次的角度为2*PI/内角个数\n    //中心与相邻两个内角相连的夹角角度\n    angle= (float) (2*Math.PI/count);\n    //每个蛛丝之间的间距\n    float r= radius/(count-1);\n    for (int i = 0; i &lt; count; i++) {\n        //当前半径\n        float curR=r*i;\n        path.reset();\n        for (int j = 0; j &lt; count; j++) {\n            if(j==0){\n                path.moveTo(centerX+curR,centerY);\n            }else {\n                //对于直角三角形sin(x)是对边比斜边，cos(x)是底边比斜边，tan(x)是对边比底边\n                //因此可以推导出:底边(x坐标)=斜边(半径)*cos(夹角角度)\n                //               对边(y坐标)=斜边(半径)*sin(夹角角度)\n                float x = (float) (centerX+curR*Math.cos(angle*j));\n                float y = (float) (centerY+curR*Math.sin(angle*j));\n                path.lineTo(x,y);\n            }\n        }\n        path.close();\n        canvas.drawPath(path,mainPaint);\n    }\n</code></pre>","more":"<p>绘制蜘蛛网络其实就是绘制指定边数的正多边形，这一步比较简单，比较难的可能就是每个顶点的算法，相关注释我都写了，还有一张来自互联网的图以助于思考，如下：</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/3054656-f380ea0f04b8619b.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"多边形夹角示意图\"></p>\n<p>绘制出的多边形成品如下:</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/3054656-35a0029632035330.gif?imageMogr2/auto-orient/strip\" alt=\"多边形效果.gif\"></p>\n<p>动画效果只是写了 set 方法，用 handler 实现,代码如下：</p>\n<pre><code>//设置数值种类\npublic void setCount(int count) {\n    this.count = count;\n    postInvalidate();\n}\n\n//设置蜘蛛网颜色\npublic void setMainPaint(Paint mainPaint) {\n    this.mainPaint = mainPaint;\n    postInvalidate();\n}\n</code></pre><p>调用方法:</p>\n<pre><code>mainPaint=new Paint();\nmainPaint.setAntiAlias(true);\nmainPaint.setStrokeWidth(1);\nmainPaint.setStyle(Paint.Style.STROKE);\nHandler handler=new Handler();\nfor (int i = 3; i &lt; 20; i++) {\nfinal int finalI = i;\nhandler.postDelayed(new Runnable() {\n    @Override\n    public void run() {\n        mRdv.setCount(finalI);\n        mainPaint.setStrokeWidth(finalI);\n        mRdv.setMainPaint(mainPaint);\n    }\n},i*300);\n}\n</code></pre><h1 id=\"第二步：绘制对角线\"><a href=\"#第二步：绘制对角线\" class=\"headerlink\" title=\"第二步：绘制对角线\"></a>第二步：绘制对角线</h1><pre><code>/**\n * 绘制直线\n */\nprivate void drawLines(Canvas canvas){\n    Path path=new Path();\n    for (int i = 0; i &lt; count; i++) {\n        path.reset();\n        path.moveTo(centerX,centerY);\n        float x = (float) (centerX+radius*Math.cos(angle*i));\n        float y = (float) (centerY+radius*Math.sin(angle*i));\n        path.lineTo(x,y);\n        canvas.drawPath(path,mainPaint);\n    }\n}\n</code></pre><p>这一步比较简单，就是将中心点和各个顶点连接起来，效果如下:</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/3054656-e8349daa51b18b38.gif?imageMogr2/auto-orient/strip\" alt=\"多边形效果.gif\"></p>\n<h1 id=\"第三步：绘制标题文字\"><a href=\"#第三步：绘制标题文字\" class=\"headerlink\" title=\"第三步：绘制标题文字\"></a>第三步：绘制标题文字</h1><pre><code>/**\n * 绘制标题文字\n *\n * @param canvas\n */\nprivate void drawTitle(Canvas canvas) {\n    if (count != titles.size()) {\n        return;\n    }\n    //相关知识点:http://mikewang.blog.51cto.com/3826268/871765/\n    Paint.FontMetrics fontMetrics = textPaint.getFontMetrics();\n    float fontHeight = fontMetrics.descent - fontMetrics.ascent;\n    //绘制文字时不让文字和雷达图形交叉,加大绘制半径\n    float textRadius = radius + fontHeight;\n    double pi = Math.PI;\n    for (int i = 0; i &lt; count; i++) {\n        float x = (float) (centerX + textRadius * Math.cos(angle * i));\n        float y = (float) (centerY + textRadius * Math.sin(angle * i));\n        //当前绘制标题所在顶点角度\n        float degrees = angle * i;\n        //从右下角开始顺时针画起,与真实坐标系相反\n        if (degrees &gt;= 0 &amp;&amp; degrees &lt; pi / 2) {//第四象限\n            float dis=textPaint.measureText(titles.get(i))/(titles.get(i).length()-1);\n            canvas.drawText(titles.get(i), x+dis, y, textPaint);\n        } else if (degrees &gt;= pi / 2 &amp;&amp; degrees &lt; pi) {//第三象限\n            float dis=textPaint.measureText(titles.get(i))/(titles.get(i).length()-1);\n            canvas.drawText(titles.get(i), x-dis, y, textPaint);\n        } else if (degrees &gt;= pi &amp;&amp; degrees &lt; 3 * pi / 2) {//第二象限\n            float dis=textPaint.measureText(titles.get(i))/(titles.get(i).length());\n            canvas.drawText(titles.get(i), x-dis, y, textPaint);\n        } else if (degrees &gt;= 3 * pi / 2 &amp;&amp; degrees &lt;= 2 * pi) {//第一象限\n            canvas.drawText(titles.get(i), x, y, textPaint);\n        }\n\n    }\n\n}\n</code></pre><p>效果如下：</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/3054656-c9132f5ff1404eaf.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image.png\"></p>\n<h1 id=\"第四步：绘制覆盖区域\"><a href=\"#第四步：绘制覆盖区域\" class=\"headerlink\" title=\"第四步：绘制覆盖区域\"></a>第四步：绘制覆盖区域</h1><p>要绘制覆盖区域，首先要指定最大值和每个分类的具体数值,有了这些数值之后，就可以绘制了。<br>代码如下：</p>\n<pre><code>/**\n * 绘制覆盖区域\n */\nprivate void drawRegion(Canvas canvas){\n    valuePaint.setAlpha(255);\n    Path path=new Path();\n    for (int i = 0; i &lt; count; i++) {\n        //计算该数值与最大值比例\n        Double perCenter = data.get(i)/maxValue;\n        //小圆点所在位置距离圆心的距离\n        double perRadius=perCenter*radius;\n        float x = (float) (centerX + perRadius * Math.cos(angle * i));\n        float y = (float) (centerY + perRadius * Math.sin(angle * i));\n        if(i==0){\n            path.moveTo(x,y);\n        }else {\n            path.lineTo(x,y);\n        }\n        //绘制小圆点\n        canvas.drawCircle(x,y,10,valuePaint);\n    }\n    //闭合覆盖区域\n    path.close();\n    valuePaint.setStyle(Paint.Style.STROKE);\n    //绘制覆盖区域外的连线\n    canvas.drawPath(path, valuePaint);\n    //填充覆盖区域\n    valuePaint.setAlpha(128);\n    valuePaint.setStyle(Paint.Style.FILL);\n    canvas.drawPath(path,valuePaint);\n}\n</code></pre><p>看一下效果：</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/3054656-d62b189d8dce1fac.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image.png\"></p>\n<p>再来看一下动态的效果吧：</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/3054656-50a0b0225608fc7b.gif?imageMogr2/auto-orient/strip\" alt=\"多边形效果.gif\"></p>\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><p>终于完成了,全部代码在下面：</p>\n<p><a href=\"https://github.com/jutao/AndroidNode/blob/master/2017/2017.3/%E9%9B%B7%E8%BE%BE%E5%9B%BE%E5%85%A8%E9%83%A8%E4%BB%A3%E7%A0%81.md\">Android雷达图全部代码 </a></p>\n<p>主要是参考 crazy__chen 大神的博客，链接贴在下面，做了一遍其实还蛮简单的，这个控件还有很多不完善的，如果实际使用需要改善的地方还有很多，如果有不足希望大家可以告诉我，谢谢！！</p>\n<p>参考资料</p>\n<p><a href=\"http://blog.csdn.net/crazy__chen/article/details/50163693\">Android雷达图(蜘蛛网图)绘制 </a></p>\n<p><a href=\"https://github.com/GcsSloop/AndroidNote/blob/master/CustomView/Advance/%5B05%5DPath_Basic.md\">Path之基本操作</a></p>"},{"title":"设计模式-策略模式","_content":"\n# 最简单的商场收银软件 #\n\n如果要做一款收银软件，营业员根据客户所购买商品单价和数量向客户收费，这非常容易。\n\nDemo 如下：\n\n![](http://i.imgur.com/XBz9iW5.png)\n\n<!-- more -->\n\n点击确定后的代码逻辑如下:\n\n      private void doEnter() {\n      String stringTotal = tv_total.getText().toString().trim();\n      double total;\n      if (stringTotal != null && stringTotal != \"\") {\n        total = Double.valueOf(stringTotal);\n      } else {\n        total = 0.0d;\n      }\n\n      String stringDJ = et_dj.getText().toString().trim();\n      String stringSL = et_sl.getText().toString().trim();\n      if (stringDJ != null && !stringDJ.equals(\"\") && stringSL != null && !stringSL.equals(\"\")) {\n        Log.d(\"TAG\", \"123\" + stringDJ + \"123\");\n        double price = Double.valueOf(stringDJ);\n        int number = Integer.valueOf(stringSL);\n        double totalPrice = price * number;\n        total = total + totalPrice;\n        tv_total.setText(String.valueOf(total));\n        String text = tv_detail.getText().toString()\n            + \"单价： \"\n            + price\n            + \" 数量：\"\n            + number\n            + \" 合计:\"\n            + totalPrice\n            + \"\\n\";\n        tv_detail.setText(text);\n      }\n    }\n\n# 增加打折功能后的收银软件\n可是如果商场搞促销，需要打折该怎么办，不可能每次都要修改代码然后重新安装，用下拉框可能会比较方便。\nDemo 如下：\n\n![](http://i.imgur.com/sLqCANA.png)\n\n添加的代码如下：\n\n         switch (sp_jsfs.getSelectedItemPosition()){\n          case 1:\n            totalPrice*=0.8;\n            break;\n          case 2:\n            totalPrice*=0.7;\n            break;\n          case 3:\n            totalPrice*=0.5;\n            break;\n        }\n这样看似解决了问题，但是需求不断增加，比如满300返50之类，这样的代码未免显得太过重复。接下来我们试着用简单工厂模式来解决问题试试。\n\n# 简单工厂实现 #\n> 面向对象的编程，并不是类越多越好，类的划分是为了封装，但分类的基础是抽象，具有相同属性和功能的对象抽象集合才是类。\n\n打一折和九折只是形式的不同，抽象分析出来，所有打折算法都是一样的，所以打折算法应该是一个类。返现算法也是一个类。\n\nMainActivity 改动如下\n\t\tCashSuper cSuper= CashFactor.createCashAccept(sp_jsfs.getSelectedItemPosition());\n        totalPrice=cSuper.acceptCash(totalPrice);\n详细代码可以去最后上传的Demo里看\n简单工厂模式虽然也能解决问题，但只是解决对象创建的问题，而且由于工厂本身包括了所有的收费方式，商场是可能经常性地更改打折和返利额度，每次维护或扩展收费方式都要改动这个工厂，以至代码要重新编译部署，这是很糟糕的，所以我们需要另一种新的设计模式--策略模式。\n# 策略模式 #\n## 什么是策略模式 ##\n> 策略模式就是定义一系列算法，把他们独立封装起来，并且这些算法之间可以相互替换。策略模式主要是管理一堆有共性的算法，客户端可以根据需要，很快切换这些算法，并且保持可扩展性。\n> 策略模式的本质：分离算法，选择实现。\n\n## 如何运用到收银系统中##\n商场收银如何促销，用打折还是返利，其实都是一些算法，用工厂来生成算法对象，这没有错，但算法本身只是一种策略，最重要的是这些算法是随时都可能互相替换的，这是变化点，而封装变化点是我们面向对象的一种很重要的思维方式。\n\n以下是策略模式 UML 图\n![](http://i.imgur.com/WxFL8fa.png)\n\n接下来我们将策略模式运用到收银系统中\n首先创建一个 CashContext 代码如下：\n\n\t\tpublic class CashContext {\n\t\t  private CashSuper cs;\n\n\t\t  public CashContext(CashSuper cs) {\n\t\t    this.cs = cs;\n\n\t\t  }\n\t\t  public double GetResule(double money){\n\t\t    return cs.acceptCash(money);\n\t\t  }\n\t\t}\n然后改动 MainActivity 如下：\n\n\t\tCashContext cc = null;\n        switch (sp_jsfs.getSelectedItemPosition()) {\n          case 0:\n            cc = new CashContext(new CashNormal());\n            break;\n          case 1:\n            cc = new CashContext(new CashReturn(300, 100));\n            break;\n          case 2:\n            cc = new CashContext(new CashRebate(0.8));\n            break;\n          case 3:\n            cc = new CashContext(new CashRebate(0.7));\n            break;\n          case 4:\n            cc = new CashContext(new CashRebate(0.5));\n            break;\n        }\n        totalPrice = cc.GetResule(totalPrice);\n\n\n这时候，你会发现，我们又像原来一样在 MainActivity 中写了判断，可以试着将之前的工厂模式和策略模式结合吗？\n\n## 策略模式与简单工厂结合##\n将 CashContext 类的构造方法修改如下：\n\n\t\tpublic CashContext(int type) {\n\t\t    switch (type) {\n\t\t      case 0:\n\t\t        cs=new CashNormal();\n\t\t        break;\n\t\t      case 1:\n\t\t        cs=new CashReturn(300,100);\n\t\t        break;\n\t\t      case 2:\n\t\t        cs = new CashRebate(0.8);\n\t\t        break;\n\t\t      case 3:\n\t\t        cs = new CashRebate(0.7);\n\t\t        break;\n\t\t      case 4:\n\t\t        cs = new CashRebate(0.5);\n\t\t        break;\n\t\t    }\n\t\t  }\nMainActivity 代码修改如下：\n\n\t\tCashContext cc = new CashContext(sp_jsfs.getSelectedItemPosition());\n        totalPrice = cc.GetResule(totalPrice);\n        total = total + totalPrice;\n\n这样客户端只需要认识一个类 CashContext就可以了，耦合度进一步降低了。\n不过这样一旦需求变化依旧需要修改 switch ，其实想要更好的实现可以用反射方法，具体用法下次再做讨论。\n\n# Demo #\n\n[策略模式 Demo](https://github.com/jutao/strategymodel)\n\n# 参考文献 #\n\n《大话设计模式》\n\n[安卓设计模式--策略模式](http://mobile.51cto.com/ahot-418972.htm)\n","source":"_posts/[Android] 设计模式-策略模式.md","raw":"---\ntitle: 设计模式-策略模式\ntags:\n- 设计模式\ncategories:\n- Android\n---\n\n# 最简单的商场收银软件 #\n\n如果要做一款收银软件，营业员根据客户所购买商品单价和数量向客户收费，这非常容易。\n\nDemo 如下：\n\n![](http://i.imgur.com/XBz9iW5.png)\n\n<!-- more -->\n\n点击确定后的代码逻辑如下:\n\n      private void doEnter() {\n      String stringTotal = tv_total.getText().toString().trim();\n      double total;\n      if (stringTotal != null && stringTotal != \"\") {\n        total = Double.valueOf(stringTotal);\n      } else {\n        total = 0.0d;\n      }\n\n      String stringDJ = et_dj.getText().toString().trim();\n      String stringSL = et_sl.getText().toString().trim();\n      if (stringDJ != null && !stringDJ.equals(\"\") && stringSL != null && !stringSL.equals(\"\")) {\n        Log.d(\"TAG\", \"123\" + stringDJ + \"123\");\n        double price = Double.valueOf(stringDJ);\n        int number = Integer.valueOf(stringSL);\n        double totalPrice = price * number;\n        total = total + totalPrice;\n        tv_total.setText(String.valueOf(total));\n        String text = tv_detail.getText().toString()\n            + \"单价： \"\n            + price\n            + \" 数量：\"\n            + number\n            + \" 合计:\"\n            + totalPrice\n            + \"\\n\";\n        tv_detail.setText(text);\n      }\n    }\n\n# 增加打折功能后的收银软件\n可是如果商场搞促销，需要打折该怎么办，不可能每次都要修改代码然后重新安装，用下拉框可能会比较方便。\nDemo 如下：\n\n![](http://i.imgur.com/sLqCANA.png)\n\n添加的代码如下：\n\n         switch (sp_jsfs.getSelectedItemPosition()){\n          case 1:\n            totalPrice*=0.8;\n            break;\n          case 2:\n            totalPrice*=0.7;\n            break;\n          case 3:\n            totalPrice*=0.5;\n            break;\n        }\n这样看似解决了问题，但是需求不断增加，比如满300返50之类，这样的代码未免显得太过重复。接下来我们试着用简单工厂模式来解决问题试试。\n\n# 简单工厂实现 #\n> 面向对象的编程，并不是类越多越好，类的划分是为了封装，但分类的基础是抽象，具有相同属性和功能的对象抽象集合才是类。\n\n打一折和九折只是形式的不同，抽象分析出来，所有打折算法都是一样的，所以打折算法应该是一个类。返现算法也是一个类。\n\nMainActivity 改动如下\n\t\tCashSuper cSuper= CashFactor.createCashAccept(sp_jsfs.getSelectedItemPosition());\n        totalPrice=cSuper.acceptCash(totalPrice);\n详细代码可以去最后上传的Demo里看\n简单工厂模式虽然也能解决问题，但只是解决对象创建的问题，而且由于工厂本身包括了所有的收费方式，商场是可能经常性地更改打折和返利额度，每次维护或扩展收费方式都要改动这个工厂，以至代码要重新编译部署，这是很糟糕的，所以我们需要另一种新的设计模式--策略模式。\n# 策略模式 #\n## 什么是策略模式 ##\n> 策略模式就是定义一系列算法，把他们独立封装起来，并且这些算法之间可以相互替换。策略模式主要是管理一堆有共性的算法，客户端可以根据需要，很快切换这些算法，并且保持可扩展性。\n> 策略模式的本质：分离算法，选择实现。\n\n## 如何运用到收银系统中##\n商场收银如何促销，用打折还是返利，其实都是一些算法，用工厂来生成算法对象，这没有错，但算法本身只是一种策略，最重要的是这些算法是随时都可能互相替换的，这是变化点，而封装变化点是我们面向对象的一种很重要的思维方式。\n\n以下是策略模式 UML 图\n![](http://i.imgur.com/WxFL8fa.png)\n\n接下来我们将策略模式运用到收银系统中\n首先创建一个 CashContext 代码如下：\n\n\t\tpublic class CashContext {\n\t\t  private CashSuper cs;\n\n\t\t  public CashContext(CashSuper cs) {\n\t\t    this.cs = cs;\n\n\t\t  }\n\t\t  public double GetResule(double money){\n\t\t    return cs.acceptCash(money);\n\t\t  }\n\t\t}\n然后改动 MainActivity 如下：\n\n\t\tCashContext cc = null;\n        switch (sp_jsfs.getSelectedItemPosition()) {\n          case 0:\n            cc = new CashContext(new CashNormal());\n            break;\n          case 1:\n            cc = new CashContext(new CashReturn(300, 100));\n            break;\n          case 2:\n            cc = new CashContext(new CashRebate(0.8));\n            break;\n          case 3:\n            cc = new CashContext(new CashRebate(0.7));\n            break;\n          case 4:\n            cc = new CashContext(new CashRebate(0.5));\n            break;\n        }\n        totalPrice = cc.GetResule(totalPrice);\n\n\n这时候，你会发现，我们又像原来一样在 MainActivity 中写了判断，可以试着将之前的工厂模式和策略模式结合吗？\n\n## 策略模式与简单工厂结合##\n将 CashContext 类的构造方法修改如下：\n\n\t\tpublic CashContext(int type) {\n\t\t    switch (type) {\n\t\t      case 0:\n\t\t        cs=new CashNormal();\n\t\t        break;\n\t\t      case 1:\n\t\t        cs=new CashReturn(300,100);\n\t\t        break;\n\t\t      case 2:\n\t\t        cs = new CashRebate(0.8);\n\t\t        break;\n\t\t      case 3:\n\t\t        cs = new CashRebate(0.7);\n\t\t        break;\n\t\t      case 4:\n\t\t        cs = new CashRebate(0.5);\n\t\t        break;\n\t\t    }\n\t\t  }\nMainActivity 代码修改如下：\n\n\t\tCashContext cc = new CashContext(sp_jsfs.getSelectedItemPosition());\n        totalPrice = cc.GetResule(totalPrice);\n        total = total + totalPrice;\n\n这样客户端只需要认识一个类 CashContext就可以了，耦合度进一步降低了。\n不过这样一旦需求变化依旧需要修改 switch ，其实想要更好的实现可以用反射方法，具体用法下次再做讨论。\n\n# Demo #\n\n[策略模式 Demo](https://github.com/jutao/strategymodel)\n\n# 参考文献 #\n\n《大话设计模式》\n\n[安卓设计模式--策略模式](http://mobile.51cto.com/ahot-418972.htm)\n","slug":"[Android] 设计模式-策略模式","published":1,"date":"2017-04-15T02:55:53.040Z","updated":"2017-04-15T02:55:53.040Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj1io9od00003doekfcc556iq","content":"<h1 id=\"最简单的商场收银软件\"><a href=\"#最简单的商场收银软件\" class=\"headerlink\" title=\"最简单的商场收银软件\"></a>最简单的商场收银软件</h1><p>如果要做一款收银软件，营业员根据客户所购买商品单价和数量向客户收费，这非常容易。</p>\n<p>Demo 如下：</p>\n<p><img src=\"http://i.imgur.com/XBz9iW5.png\" alt=\"\"></p>\n<a id=\"more\"></a>\n<p>点击确定后的代码逻辑如下:</p>\n<pre><code>  private void doEnter() {\n  String stringTotal = tv_total.getText().toString().trim();\n  double total;\n  if (stringTotal != null &amp;&amp; stringTotal != &quot;&quot;) {\n    total = Double.valueOf(stringTotal);\n  } else {\n    total = 0.0d;\n  }\n\n  String stringDJ = et_dj.getText().toString().trim();\n  String stringSL = et_sl.getText().toString().trim();\n  if (stringDJ != null &amp;&amp; !stringDJ.equals(&quot;&quot;) &amp;&amp; stringSL != null &amp;&amp; !stringSL.equals(&quot;&quot;)) {\n    Log.d(&quot;TAG&quot;, &quot;123&quot; + stringDJ + &quot;123&quot;);\n    double price = Double.valueOf(stringDJ);\n    int number = Integer.valueOf(stringSL);\n    double totalPrice = price * number;\n    total = total + totalPrice;\n    tv_total.setText(String.valueOf(total));\n    String text = tv_detail.getText().toString()\n        + &quot;单价： &quot;\n        + price\n        + &quot; 数量：&quot;\n        + number\n        + &quot; 合计:&quot;\n        + totalPrice\n        + &quot;\\n&quot;;\n    tv_detail.setText(text);\n  }\n}\n</code></pre><h1 id=\"增加打折功能后的收银软件\"><a href=\"#增加打折功能后的收银软件\" class=\"headerlink\" title=\"增加打折功能后的收银软件\"></a>增加打折功能后的收银软件</h1><p>可是如果商场搞促销，需要打折该怎么办，不可能每次都要修改代码然后重新安装，用下拉框可能会比较方便。<br>Demo 如下：</p>\n<p><img src=\"http://i.imgur.com/sLqCANA.png\" alt=\"\"></p>\n<p>添加的代码如下：</p>\n<pre><code> switch (sp_jsfs.getSelectedItemPosition()){\n  case 1:\n    totalPrice*=0.8;\n    break;\n  case 2:\n    totalPrice*=0.7;\n    break;\n  case 3:\n    totalPrice*=0.5;\n    break;\n}\n</code></pre><p>这样看似解决了问题，但是需求不断增加，比如满300返50之类，这样的代码未免显得太过重复。接下来我们试着用简单工厂模式来解决问题试试。</p>\n<h1 id=\"简单工厂实现\"><a href=\"#简单工厂实现\" class=\"headerlink\" title=\"简单工厂实现\"></a>简单工厂实现</h1><blockquote>\n<p>面向对象的编程，并不是类越多越好，类的划分是为了封装，但分类的基础是抽象，具有相同属性和功能的对象抽象集合才是类。</p>\n</blockquote>\n<p>打一折和九折只是形式的不同，抽象分析出来，所有打折算法都是一样的，所以打折算法应该是一个类。返现算法也是一个类。</p>\n<p>MainActivity 改动如下<br>        CashSuper cSuper= CashFactor.createCashAccept(sp_jsfs.getSelectedItemPosition());<br>        totalPrice=cSuper.acceptCash(totalPrice);<br>详细代码可以去最后上传的Demo里看<br>简单工厂模式虽然也能解决问题，但只是解决对象创建的问题，而且由于工厂本身包括了所有的收费方式，商场是可能经常性地更改打折和返利额度，每次维护或扩展收费方式都要改动这个工厂，以至代码要重新编译部署，这是很糟糕的，所以我们需要另一种新的设计模式–策略模式。</p>\n<h1 id=\"策略模式\"><a href=\"#策略模式\" class=\"headerlink\" title=\"策略模式\"></a>策略模式</h1><h2 id=\"什么是策略模式\"><a href=\"#什么是策略模式\" class=\"headerlink\" title=\"什么是策略模式\"></a>什么是策略模式</h2><blockquote>\n<p>策略模式就是定义一系列算法，把他们独立封装起来，并且这些算法之间可以相互替换。策略模式主要是管理一堆有共性的算法，客户端可以根据需要，很快切换这些算法，并且保持可扩展性。<br>策略模式的本质：分离算法，选择实现。</p>\n</blockquote>\n<h2 id=\"如何运用到收银系统中\"><a href=\"#如何运用到收银系统中\" class=\"headerlink\" title=\"如何运用到收银系统中\"></a>如何运用到收银系统中</h2><p>商场收银如何促销，用打折还是返利，其实都是一些算法，用工厂来生成算法对象，这没有错，但算法本身只是一种策略，最重要的是这些算法是随时都可能互相替换的，这是变化点，而封装变化点是我们面向对象的一种很重要的思维方式。</p>\n<p>以下是策略模式 UML 图<br><img src=\"http://i.imgur.com/WxFL8fa.png\" alt=\"\"></p>\n<p>接下来我们将策略模式运用到收银系统中<br>首先创建一个 CashContext 代码如下：</p>\n<pre><code>public class CashContext {\n  private CashSuper cs;\n\n  public CashContext(CashSuper cs) {\n    this.cs = cs;\n\n  }\n  public double GetResule(double money){\n    return cs.acceptCash(money);\n  }\n}\n</code></pre><p>然后改动 MainActivity 如下：</p>\n<pre><code>CashContext cc = null;\nswitch (sp_jsfs.getSelectedItemPosition()) {\n  case 0:\n    cc = new CashContext(new CashNormal());\n    break;\n  case 1:\n    cc = new CashContext(new CashReturn(300, 100));\n    break;\n  case 2:\n    cc = new CashContext(new CashRebate(0.8));\n    break;\n  case 3:\n    cc = new CashContext(new CashRebate(0.7));\n    break;\n  case 4:\n    cc = new CashContext(new CashRebate(0.5));\n    break;\n}\ntotalPrice = cc.GetResule(totalPrice);\n</code></pre><p>这时候，你会发现，我们又像原来一样在 MainActivity 中写了判断，可以试着将之前的工厂模式和策略模式结合吗？</p>\n<h2 id=\"策略模式与简单工厂结合\"><a href=\"#策略模式与简单工厂结合\" class=\"headerlink\" title=\"策略模式与简单工厂结合\"></a>策略模式与简单工厂结合</h2><p>将 CashContext 类的构造方法修改如下：</p>\n<pre><code>public CashContext(int type) {\n    switch (type) {\n      case 0:\n        cs=new CashNormal();\n        break;\n      case 1:\n        cs=new CashReturn(300,100);\n        break;\n      case 2:\n        cs = new CashRebate(0.8);\n        break;\n      case 3:\n        cs = new CashRebate(0.7);\n        break;\n      case 4:\n        cs = new CashRebate(0.5);\n        break;\n    }\n  }\n</code></pre><p>MainActivity 代码修改如下：</p>\n<pre><code>CashContext cc = new CashContext(sp_jsfs.getSelectedItemPosition());\ntotalPrice = cc.GetResule(totalPrice);\ntotal = total + totalPrice;\n</code></pre><p>这样客户端只需要认识一个类 CashContext就可以了，耦合度进一步降低了。<br>不过这样一旦需求变化依旧需要修改 switch ，其实想要更好的实现可以用反射方法，具体用法下次再做讨论。</p>\n<h1 id=\"Demo\"><a href=\"#Demo\" class=\"headerlink\" title=\"Demo\"></a>Demo</h1><p><a href=\"https://github.com/jutao/strategymodel\" target=\"_blank\" rel=\"external\">策略模式 Demo</a></p>\n<h1 id=\"参考文献\"><a href=\"#参考文献\" class=\"headerlink\" title=\"参考文献\"></a>参考文献</h1><p>《大话设计模式》</p>\n<p><a href=\"http://mobile.51cto.com/ahot-418972.htm\" target=\"_blank\" rel=\"external\">安卓设计模式–策略模式</a></p>\n","site":{"data":{}},"excerpt":"<h1 id=\"最简单的商场收银软件\"><a href=\"#最简单的商场收银软件\" class=\"headerlink\" title=\"最简单的商场收银软件\"></a>最简单的商场收银软件</h1><p>如果要做一款收银软件，营业员根据客户所购买商品单价和数量向客户收费，这非常容易。</p>\n<p>Demo 如下：</p>\n<p><img src=\"http://i.imgur.com/XBz9iW5.png\" alt=\"\"></p>","more":"<p>点击确定后的代码逻辑如下:</p>\n<pre><code>  private void doEnter() {\n  String stringTotal = tv_total.getText().toString().trim();\n  double total;\n  if (stringTotal != null &amp;&amp; stringTotal != &quot;&quot;) {\n    total = Double.valueOf(stringTotal);\n  } else {\n    total = 0.0d;\n  }\n\n  String stringDJ = et_dj.getText().toString().trim();\n  String stringSL = et_sl.getText().toString().trim();\n  if (stringDJ != null &amp;&amp; !stringDJ.equals(&quot;&quot;) &amp;&amp; stringSL != null &amp;&amp; !stringSL.equals(&quot;&quot;)) {\n    Log.d(&quot;TAG&quot;, &quot;123&quot; + stringDJ + &quot;123&quot;);\n    double price = Double.valueOf(stringDJ);\n    int number = Integer.valueOf(stringSL);\n    double totalPrice = price * number;\n    total = total + totalPrice;\n    tv_total.setText(String.valueOf(total));\n    String text = tv_detail.getText().toString()\n        + &quot;单价： &quot;\n        + price\n        + &quot; 数量：&quot;\n        + number\n        + &quot; 合计:&quot;\n        + totalPrice\n        + &quot;\\n&quot;;\n    tv_detail.setText(text);\n  }\n}\n</code></pre><h1 id=\"增加打折功能后的收银软件\"><a href=\"#增加打折功能后的收银软件\" class=\"headerlink\" title=\"增加打折功能后的收银软件\"></a>增加打折功能后的收银软件</h1><p>可是如果商场搞促销，需要打折该怎么办，不可能每次都要修改代码然后重新安装，用下拉框可能会比较方便。<br>Demo 如下：</p>\n<p><img src=\"http://i.imgur.com/sLqCANA.png\" alt=\"\"></p>\n<p>添加的代码如下：</p>\n<pre><code> switch (sp_jsfs.getSelectedItemPosition()){\n  case 1:\n    totalPrice*=0.8;\n    break;\n  case 2:\n    totalPrice*=0.7;\n    break;\n  case 3:\n    totalPrice*=0.5;\n    break;\n}\n</code></pre><p>这样看似解决了问题，但是需求不断增加，比如满300返50之类，这样的代码未免显得太过重复。接下来我们试着用简单工厂模式来解决问题试试。</p>\n<h1 id=\"简单工厂实现\"><a href=\"#简单工厂实现\" class=\"headerlink\" title=\"简单工厂实现\"></a>简单工厂实现</h1><blockquote>\n<p>面向对象的编程，并不是类越多越好，类的划分是为了封装，但分类的基础是抽象，具有相同属性和功能的对象抽象集合才是类。</p>\n</blockquote>\n<p>打一折和九折只是形式的不同，抽象分析出来，所有打折算法都是一样的，所以打折算法应该是一个类。返现算法也是一个类。</p>\n<p>MainActivity 改动如下<br>        CashSuper cSuper= CashFactor.createCashAccept(sp_jsfs.getSelectedItemPosition());<br>        totalPrice=cSuper.acceptCash(totalPrice);<br>详细代码可以去最后上传的Demo里看<br>简单工厂模式虽然也能解决问题，但只是解决对象创建的问题，而且由于工厂本身包括了所有的收费方式，商场是可能经常性地更改打折和返利额度，每次维护或扩展收费方式都要改动这个工厂，以至代码要重新编译部署，这是很糟糕的，所以我们需要另一种新的设计模式–策略模式。</p>\n<h1 id=\"策略模式\"><a href=\"#策略模式\" class=\"headerlink\" title=\"策略模式\"></a>策略模式</h1><h2 id=\"什么是策略模式\"><a href=\"#什么是策略模式\" class=\"headerlink\" title=\"什么是策略模式\"></a>什么是策略模式</h2><blockquote>\n<p>策略模式就是定义一系列算法，把他们独立封装起来，并且这些算法之间可以相互替换。策略模式主要是管理一堆有共性的算法，客户端可以根据需要，很快切换这些算法，并且保持可扩展性。<br>策略模式的本质：分离算法，选择实现。</p>\n</blockquote>\n<h2 id=\"如何运用到收银系统中\"><a href=\"#如何运用到收银系统中\" class=\"headerlink\" title=\"如何运用到收银系统中\"></a>如何运用到收银系统中</h2><p>商场收银如何促销，用打折还是返利，其实都是一些算法，用工厂来生成算法对象，这没有错，但算法本身只是一种策略，最重要的是这些算法是随时都可能互相替换的，这是变化点，而封装变化点是我们面向对象的一种很重要的思维方式。</p>\n<p>以下是策略模式 UML 图<br><img src=\"http://i.imgur.com/WxFL8fa.png\" alt=\"\"></p>\n<p>接下来我们将策略模式运用到收银系统中<br>首先创建一个 CashContext 代码如下：</p>\n<pre><code>public class CashContext {\n  private CashSuper cs;\n\n  public CashContext(CashSuper cs) {\n    this.cs = cs;\n\n  }\n  public double GetResule(double money){\n    return cs.acceptCash(money);\n  }\n}\n</code></pre><p>然后改动 MainActivity 如下：</p>\n<pre><code>CashContext cc = null;\nswitch (sp_jsfs.getSelectedItemPosition()) {\n  case 0:\n    cc = new CashContext(new CashNormal());\n    break;\n  case 1:\n    cc = new CashContext(new CashReturn(300, 100));\n    break;\n  case 2:\n    cc = new CashContext(new CashRebate(0.8));\n    break;\n  case 3:\n    cc = new CashContext(new CashRebate(0.7));\n    break;\n  case 4:\n    cc = new CashContext(new CashRebate(0.5));\n    break;\n}\ntotalPrice = cc.GetResule(totalPrice);\n</code></pre><p>这时候，你会发现，我们又像原来一样在 MainActivity 中写了判断，可以试着将之前的工厂模式和策略模式结合吗？</p>\n<h2 id=\"策略模式与简单工厂结合\"><a href=\"#策略模式与简单工厂结合\" class=\"headerlink\" title=\"策略模式与简单工厂结合\"></a>策略模式与简单工厂结合</h2><p>将 CashContext 类的构造方法修改如下：</p>\n<pre><code>public CashContext(int type) {\n    switch (type) {\n      case 0:\n        cs=new CashNormal();\n        break;\n      case 1:\n        cs=new CashReturn(300,100);\n        break;\n      case 2:\n        cs = new CashRebate(0.8);\n        break;\n      case 3:\n        cs = new CashRebate(0.7);\n        break;\n      case 4:\n        cs = new CashRebate(0.5);\n        break;\n    }\n  }\n</code></pre><p>MainActivity 代码修改如下：</p>\n<pre><code>CashContext cc = new CashContext(sp_jsfs.getSelectedItemPosition());\ntotalPrice = cc.GetResule(totalPrice);\ntotal = total + totalPrice;\n</code></pre><p>这样客户端只需要认识一个类 CashContext就可以了，耦合度进一步降低了。<br>不过这样一旦需求变化依旧需要修改 switch ，其实想要更好的实现可以用反射方法，具体用法下次再做讨论。</p>\n<h1 id=\"Demo\"><a href=\"#Demo\" class=\"headerlink\" title=\"Demo\"></a>Demo</h1><p><a href=\"https://github.com/jutao/strategymodel\">策略模式 Demo</a></p>\n<h1 id=\"参考文献\"><a href=\"#参考文献\" class=\"headerlink\" title=\"参考文献\"></a>参考文献</h1><p>《大话设计模式》</p>\n<p><a href=\"http://mobile.51cto.com/ahot-418972.htm\">安卓设计模式–策略模式</a></p>"}],"PostAsset":[],"PostCategory":[{"post_id":"cj1io9ock0001doekq5cj01w5","category_id":"cj1io9odf0005doektiswlepy","_id":"cj1io9odf0009doektkev7mur"},{"post_id":"cj1io9od00003doekfcc556iq","category_id":"cj1io9odf0005doektiswlepy","_id":"cj1io9odf000cdoektemycbse"}],"PostTag":[{"post_id":"cj1io9ock0001doekq5cj01w5","tag_id":"cj1io9odf0006doekf84bu6to","_id":"cj1io9odf000bdoek1y2n8kbf"},{"post_id":"cj1io9ock0001doekq5cj01w5","tag_id":"cj1io9odf0008doekgnr19479","_id":"cj1io9odf000ddoeks5rjsmnh"},{"post_id":"cj1io9od00003doekfcc556iq","tag_id":"cj1io9odf000adoekl7wr5l6i","_id":"cj1io9odf000edoekldfcepne"}],"Tag":[{"name":"Path","_id":"cj1io9odf0006doekf84bu6to"},{"name":"draw","_id":"cj1io9odf0008doekgnr19479"},{"name":"设计模式","_id":"cj1io9odf000adoekl7wr5l6i"}]}}